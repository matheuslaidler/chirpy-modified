[
  
  {
    "title": "Invadindo rede wifi na prática",
    "url": "/posts/hackeando-wifi/",
    "categories": "SecLab, Way Of Security",
    "tags": "Wifi Hacking, Shell Script, Brute Force",
    "date": "2023-08-25 03:19:12 -0300",
    





    
    "snippet": "Hackeando redes sem fio na práticaNeste artigo vou mostrar para vocês como funciona na prática a invasão de uma rede wireless, e como foi minhas primeiras experiências hackeando redes wifi reais.É ...",
    "content": "Hackeando redes sem fio na práticaNeste artigo vou mostrar para vocês como funciona na prática a invasão de uma rede wireless, e como foi minhas primeiras experiências hackeando redes wifi reais.É ideal que você já saiba o básico de redes wireless, como funcionam os protocolos e conceitos, pois eles não serão explicados aprofundadamente nesta publicação. Futuramente, teremos em breve uma postagem específica que correrá por toda essa base de forma detalhada, porém explicaremos sobre alguns conceitos básicos por aqui para entendimento geral - por exemplo, como funciona a conexão em uma wifi.O que esperar desta publicaçãoNesta postagem será esperado algumas explicações mais práticas - com as ferramentas utilizadas no processo, por ter foco prático de uma invasão em redes wireless alheias utilizando pacote Aircrakc-ng, enquanto mostro como foi a minha experiência descobrindo uma falha nas credenciais padrões de roteadores de uma grande operadora, que me permitia descobrir e ter acesso a qualquer rede que não tivesse alterado as credencias padrões. Então, para mostrar como vi essa falha e explorei ela, estarei mostrando como um ataque a rede wireless funciona na prática também.  Vale já esclarecer que o intuito deste tópico é totalmente educativo e não me responsabilizo por nenhum ato de terceiro.Como pude invadir a rede da minha vizinha  Deixo claro também que, apesar dos pesares, nenhum ato de intenção malígna foi feito e a operadora em questão já atualizou sua forma de padronização de credenciais. Por este motivo resolvi repostar sobre esta falha protocolar, visto que muitos usuários ainda podem estar utilizando e ficando vulneráveis e precisam se atentar a isso.ContextualizaçãoAmbientificação de wifi hacking na prática &amp; achando vulnerabilidade em redes wireless de uma operadora famosa.Detectando erro uma grande operadora.Em uma experiência passada, descobri uma vulnerabilidade significativa em uma grande operadora de internet. Eles estavam usando um modelo padrão de credencial fraco para suas redes Wi-Fi. A consistência desse padrão tornou-se aparente ao observar os modems da mesma operadora em várias residências de familiares.Para explorar essa falha, desenvolvi um script que gerava uma wordlist perfeita para esse padrão específico. Com o tempo fui fazendo um com o pacote aircrack junto. O resultado foi surpreendente - uma taxa de sucesso de 100% em todos os testes feitos, inclusive um deles sendo no modem de uma vizinha. No entanto, um tempo após a divulgação do projeto no github, a operadora solicitou sua remoção, principalmente devido à exposição indesejada que acabou rolando por vacilo meu. Tudo isso será melhor explorado mais a frente, tendo aqui apenas o contexto por trás.Felizmente, essa história tem um final positivo. Acredito que a operadora reconheceu a falha e melhorou, pois seu padrão de credenciais foi atualizado nos meus modems atuais, aumentando a segurança para seus usuários até certo ponto. Isso destaca a importância da segurança cibernética e da constante evolução para proteger contra ameaças emergentes. Se não sabe quais riscos sua rede invadida te trás, fiz um post sobre isso.Pincelada geral na conexão wirelessImagine a conexão de uma wifi como uma conversa animada em uma festa. Seu dispositivo é como um convidado procurando alguém para conversar e/ou dançar. Ele pode simplesmente começar a “gritar” no espaço, perguntando: “Tem alguém de bobeira aí?”. Isso é semelhante ao seu dispositivo procurando por redes Wi-Fi disponíveis.Quando um roteador Wi-Fi, que podemos pensar como outro convidado na festa, ouve o chamado, ele pode responder: “Eu! Meu nome é ‘Rede KLANU_2G1Z672U’”. Agora, seu dispositivo sabe com quem pode “conversar” (ou dançar, rs), que são os que responderam, podendo escolher agora a rede com a qual deseja se conectar.Em seguida, seu dispositivo se aproxima do roteador e diz: “Oi, eu sou o ‘DispositivoA’, posso conversar/dançar com você?”. Sendo uma resposta positiva, acaba se equivalendo a quando você coloca a senha correta. Em outras palavras, isso é semelhante a quando você insere a senha da rede Wi-Fi, pois se a senha estiver correta, o roteador reconhece seu dispositivo como um “convidado” confiável e permite que ele “entre na conversa” ou aceite o pedido de dança. Quando isso acontece e a pessoa é reconhecida, eles apertam as mãos e isso é o que chamamos de “handshake”.Podendo ser mais esclarecedor uma senha no exemplo da situação, imagine que o evento aconteça dentro de uma região barra pesada e que neste evento existem vários grupos fechados em que apenas pessoas verificadas e confiáveis entram. Cada grupo tem uma identificação própria - como uma tatuágem específica -, como um código secreto de detecção de membros. O ‘DispositivoA’, assim que ele percebeu que a ‘Rede KLANU_2G1Z672U’ estava disponível para dançar ou conversar, precisaria ter esta tatuagem para que ela aceitasse dançar com ele, já que só assim ela saberia que ele era confiável e não de um grupo rival. E de praste, todos fazem aperto de mão específico do grupo para começar.Uma vez que a “conversa” foi estabelecida, seu dispositivo e o roteador podem começar a trocar informações. Eles tendo uma longa e animada conversa na festa é basicamente como navegar na internet, assistir a vídeos, enviar e-mails, etc.Essa “conversa” acontece através de ondas de rádio, que são como as palavras que usamos para conversar. Assim como podemos ouvir várias conversas em uma festa, seu dispositivo pode detectar várias redes ao mesmo tempo. Mas ele só pode “conversar” de verdade com uma rede de cada vez, assim como você só pode ter uma conversa de cada vez.  Quando você termina de usar a internet, é como se seu dispositivo estivesse se despedindo e saindo da festa. O roteador nota que seu dispositivo “saiu da conversa” e encerra a conexão. Lembre-se, tudo isso acontece em milésimos de segundo.Pincelada sobre wifi hacking em geralO hacking de Wi-Fi é um tópico complexo que envolve uma compreensão profunda das redes sem fio e dos protocolos de segurança. Acho importante resumir ao menos os conceitos-chave.Interface de Rede é o ponto de conexão entre o dispositivo e a rede. No contexto do Wi-Fi, a interface de rede sem fio permite que o dispositivo se conecte a redes Wi-Fi.O monitoramento é o processo de observar e registrar a atividade em uma rede. No hacking de Wi-Fi, isso geralmente envolve colocar a interface de rede sem fio em “modo de monitoramento” para capturar o tráfego de rede.Desautenticação (Deauth) é um tipo de ataque que interrompe a conexão entre um dispositivo e a rede Wi-Fi (ou de uma rede inteira). Isso é feito enviando pacotes de desautenticação para o dispositivo e o ponto de acesso (AP), fazendo com que o dispositivo se desconecte. Quando um usuário é autêntico de uma rede, ao ser forçadamente dissociado (como por exemplo sair do alcance da rede) ele pode se associar automaticamente sem precisar recolocar a senha. Assim temos o processo de Auth e DeAuth. Ao forçar um DeAuth em alguém, ela de autenticará novamente e será possível capturar o aperto de mão deles para um atacante. O atacante também pode manter o usuário ou rede sem funcionar com ataques de DeAuth sem parar.O handshake é o processo de estabelecer uma conexão segura entre o dispositivo e o ponto de acesso, durante ela que eles trocam informações de autenticação. Capturar o handshake é um passo crucial no hacking de Wi-Fi, pois ele contém a “prova” criptografada da senha da rede. Contextualizando mais sobre os nossos exemplos, para que tenha sentido sair testando várias senhas até acertar, o usuário saber o “aperto de mão específico do grupo” acaba sendo de extrema importância, pois pode parecer que você apenas esqueceu ou é novo no grupo.A força bruta (Brute Force) é um método de descobrir a senha de uma rede através da tentativa e erro. Isso envolve testar todas as combinações possíveis de senhas até encontrar a correta. No contexto do hacking de Wi-Fi, a força bruta é geralmente usada para decifrar a senha a partir do handshake capturado e uma lista de possíveis senhas/combinações.  Agora, mãos a obra  Todo o processo foi feito dentro de um mesmo diretórioFase de ReconhecimentoA fase de reconhecimento acaba sendo muito de ficar monitorando as redes alheias, seus comportamentos, possíveis vulnerabilidades aparente e anotando as informações dos alvos.Recon é um passo crucial em hacking, e não seria diferente quando se fala em invasão de redes sem fio. ÉJá que é nessa etapa que os invasores coletam informações sobre a rede que desejam invadir. Isso pode incluir a identificação de redes disponíveis - como bssid (endereço fisico) e o canal de atuação -, a determinação do tipo de criptografia usada - como WPA2-PSK - e/ou até identificação de possíveis alvos vulneráves.Um exemplo interessante de possíveis alvos vulneráveis envolve aquela minha análise das credenciais usadas em certos modems de uma empresa, q é o q explocaremos aqui neste artigo. Observei que os nomes das redes seguiam um padrão com caracteres aleatórios ao final. As senhas sempre tinham 8 dígitos com 6 deles sendo exibidos nessa parte final do essid (nome da rede).  Em outras palavras, o início do nome da rede era sempre igual, mudando o que vinha após do 2G (ou 5G), o que também fazia com que o nome da rede sempre tivesse também o mesmo número de caractere. Além disso, esses dígitos aleatórios eram sempre uma combinação de letras maiúsculas e números, apenas. Assim como no nosso exemplo fictício:  KLANU_2G1Z672UFoi assim que veio crescendo a ideia de tentar criar um script que faz a wordlist perfeita para essas redes, apenas como teste, até porque o trabalho de uma wordlist grande e ficaz já foi reduzido sozinho. De uma determinada forma, a identificação do padrão de login/senha da rede faz parte de uma análise de reconhecimento também, acredito eu. Neste documento não apenas teremos o “passo a passo”, como também mostraremos uma criação de shellscript para fazer a wordlist de qualquer rede vulnerável.Arquivo de informaçõesCriando documento para salvar informação útil dos alvosnano &lt; nome &gt;Exemplo: nano infosIdentificar sua interface de redeiwconfigAnotar sobre a interface no documentoAtivar modo de monitoramentosudo airmon-ng start &lt; interface &gt;Exemplo: sudo airmon-ng start wlp1s0 -&gt; resultando na interface em modo mon: wlp1s0mon  O resultado pode ser verificado ao rodar o comando iwconfig novamente.Utilize o “stop” para desativar, além de pode utilizar o comando com “status” para verificar se está ativado ou desativado.  Lembre-se de que o modo de monitoramento te desconecta da sua rede.Monitorar redes wi-fi próximassudo airodump-ng &lt; interfacemon &gt;Exemplo: sudo airodump-ng wlp1s0monNão esquecer de anotar as informações adquiridas nesta parte no seu documento, como ESSID (nome da rede), BSSID (endereço mac/físico) e o CH (canal).Monitoramento do alvoNesta etapa, o monitoramento será específico para uma rede alvo com a captura dos arquivos ‘.cap’.sudo airodump-ng --bssid &lt; mac &gt; -c &lt; CH &gt; -w &lt; nome &gt; &lt; interfacemon &gt;ousudo airodump-ng --essid &lt; wifi &gt; -c &lt; CH &gt; -w &lt; nome &gt; &lt; interfacemon &gt;ousudo airodump-ng --essid &lt; nomeWiFi &gt; -w &lt; nomeArquivo &gt; &lt; interfacemon &gt;Exemplo: sudo airodump-ng --essid KLANU_2G1Z672U -c 1 -w APtura wlan0monRecomendado ser mais específico, por exemplo, deixar claro o canal de funcionamento e o endereço físico.Agora a tabela de monitoramento vai ser apenas na rede especificada, como poderá ser visto na tabela de cima, e com a tabela de baixo mostrando os dispositivos que se comunicam com esta rede.  Agora pode existir algum tipo de ataque direto em um usuário de uma rede, por exemplo para ser desconectado, ou numa rede inteira que afetaria todos os conectados nela.Importante não esquecer de colocar as informações, como o BSSID do(s) alvo(s), no documento e abrir uma sessão/aba no terminal para a próxima etapa.Fase de Testes de Invasão e ExploraçãoNem todas as redes vão seguir os padrões de credenciais que estamos trabalhando nesta publicação, até porque a empresa que utilizava esta regra já alterou para uma mais forte. Porém, ainda podemos ter pessoas q usam um padrão aproximado e vamos explorar isso nesta etapa. Vamos precisar reforçar uma comunicação com algum dispositivo dentro da rede alvo, para capturarmos o ‘handshake’ de autenticação. Assim, vamos poder testar nossa wordlist e concluir com o ataque, podendo ser feito várias vezes com várias wordlists caso não siga este padrão, mas sim outro. Alguns podem ter wordlists que salvam várias senhas que era padrões de modem para ir testando, o que não garante nada mas que pode ser feito.Pode ser que o ataque de dissociação de algum usuário - para forçar reconexão - não funciona tão bem, sendo necessário fazer em outro dispositivo da rede ou até na rede inteira. Este ataque consiste em mandar diversos pacotes de DeAuth para a rede ou o alvo específico, poderemos ditar a quantidade de pacotes que iremos enviar. Assim, podemos também mandar uma quantidade absurda para derrubar a rede por um tempo - e isso apenas tendo alcance a rede.Após a captura do handshake e com a wordlist pronta, podemos fazer os testes das senhas que temos em mãos. Bastaria agora testar até achar.  Ainda com terminal aberto no monitoramento…Ataque de desautenticação de usuário(s)sudo aireplay-ng --deauth &lt; númeroPacotes &gt; -a &lt; bssidAlvo &gt; &lt; interfacemon &gt;Usando aireplay enquanto roda o monitoramento dessa rede em outra sessão do terminal / em segundo plano, pode ser visto o alvo sendo desconectado, sendo forçado a se reconectar e a captura do handshake. Quando a captura ocorrer, então o processo foi finalizado.Uma vez que a captura do handshake foi feita e já tem a wordlist em mãos, basta partir pro abraço, mas nesse caso mostraremos como foi a nossa criação e automatização na criação da nossa lista de senhas para qualquer rede que siga a mesma regra.Criação da wordlist para o padrão observadoO comando que usamos para criar uma wordlist específica foi:crunch 8 8 ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890 -t @@PADRAO -o nomeWLUsamos o crunch para criar um arquivo em que cada palavra-chave possui tamanho único de 8 (mínimo e máximo), utilizando análise combinatória para uso de todo o alfabeto maiúsculo e números onde estão posicionados os arrobas @@, que indica ser apenas duas combinações de caracteres.Rede alvo com padrão vulnerável -&gt; essid: KLANU_2G1Z672U -&gt; os 6 últimos dígitos também são os últimos 6 da senha (de 8 dígitos) -&gt; 5G672U  padrão de exemplo: KLANU_2G1Z672U:xx5G672U para descobrirmos o valor de xxExemplo: crunch 8 8 ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890 -t @@5G672U -o wl  É possível reconhecer que é fácil de automatizar isso em shell script, né? bem fácil… tendo em vista que o código padrão q é usado no nome e na senha nunca será o mesmo da de outra rede, então precisamos fazer o script funcionar de acordo com o nome da rede fornecida.Automatizando a criação da wordlistFazendo a wordlist perfeita para as redes que seguem a mesma ideia.Queremos salvar a informação passada pelo usuário, que seria o nome da rede, e salvar os ultimos 6 dígitos em um arquivo para utilizarmos este conteúdo no crunch, que como vimos anteriormente, apenas precisa combinar dois caracteres aleatórios (compostos por letra maiúscula e/ou números) seguido do q foi gravado no arquivo. Assim, o script funciona para criar wordlist de qualquer rede que se encaixe nesse padrão frágil de acesso.#!/bin/bashread -p \"Digite o nome da rede alvo (essid): \" essidecho $essid | cut -d \"G\" -f 2 &gt; wifi.txt &amp;&amp; crunch 8 8 ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890 -t @@$(cat wifi.txt) -o wl &amp;&gt;/dev/null &amp;&amp; rm wifi.txtsleep 0.35secho \"Wordlist criada com sucesso!\"sleep 0.2secho \"Arquivo salvo como wl\"Ao abrir o script (chmod +x &lt; nome do script &gt; + ./&lt; nome do script &gt;) e digitar o nome da rede alvo, ele te retornará o arquivo wl feito. Agora podemos passar para a real fase de exploração, uma vez que já temos uma wordlist pronta para o uso.Quebrando a senha da rede sem fio alvoCom tudo pronto podemos partir pro ataque com o aircrack.sudo aircrack-ng -a2 -e &lt; \"ESSID_Rede\" &gt; &lt; \"NomeArquivoCap*\" &gt; -w &lt; wordlist &gt;Resultado de exemplo da rede KLANU_2G1Z672U -&gt; Key Found! [325G672U]  Não esquecer de dar o airmon-ng stop wlp1s0mon posteriormente, para ter acesso a internet.  KLANU_2G1Z672U:325G672U [ESSID:PASSWD]Fase de pós-exploração de uma situação real (alerta de perígo)Nessa etapa temos os reais problemas de alguém dentro de um ambiente restrito. Imagine que temos um espião de uma empresa rival dentro da sala de reunião da sua empresa? ouvindo e gravando tudo? ou pior, se está fazendo parte de uma reunião de emergência da sua empresa que você não está presente, e faz parecer que você o colocou como uma peça importante para ditar como certas coisas serão feitas… pois é, seria um desastre, né?Uma pessoa na sua rede wifi pode estar entre sua conexão e a do roteador, pode estar entre sua conexão e a de algum servidor, pode até mesmo fazer modificação no DNS local para alterar a página oficial de uma rede social para uma página fake dele (isto é, fazer com que o endereço original ‘twitter.com’ / ou ‘x.com’ seja redirecionado para a página falsa dele).São, em geral, problemas que você poderá sofrer ao utilizar redes wifi públicas alheias. O atacante pode se tornar o ‘homem no meio’ de toda a comunicação e isso pode ser bem prejudicial. Além de poder acessar bizarrices na sua rede privada.Se quiser saber mais sobre os perigos de uma invasão a uma rede wifi, tenho uma publicação feita exclusivamente sobre isso e também dando dicas de como se proteger. WayOfSec: Perigos de uma rede wireless"
  },
  
  {
    "title": "Desvendando a Forense Digital",
    "url": "/posts/forense-computacional/",
    "categories": "Forensic Trail",
    "tags": "Forense digital, Análise Forense, Esteganografia, Criptografia, Ferramentas Forense",
    "date": "2023-08-20 13:29:10 -0300",
    





    
    "snippet": "Computação Forense à primeira vistaIntrodução geral para a área tecnológica de forense computacional.Conhecendo a áreaA computação forense é uma área da ciência da computação que se dedica a invest...",
    "content": "Computação Forense à primeira vistaIntrodução geral para a área tecnológica de forense computacional.Conhecendo a áreaA computação forense é uma área da ciência da computação que se dedica a investigar e analisar dados digitais com o objetivo de encontrar evidências ou informações relevantes para casos judiciais, criminais ou administrativos. A computação forense envolve diversas etapas, desde a aquisição de imagem dos dispositivos de armazenamento até a recuperação de arquivos apagados ou ocultos. Neste texto, vamos explicar um pouco mais sobre cada uma dessas etapas e como elas podem ajudar a solucionar crimes ou problemas envolvendo dados digitais.Tópcicos e etapas importantesVamos passar um pente fino para clarear e apresentar sobre alguns tópicos importantes desta área da tecnologia investigativaAquisição de imagemA primeira etapa da computação forense é a aquisição de imagem, que consiste em copiar os dados de um dispositivo de armazenamento, como um HD ou um SSD, para outro meio, como um pendrive ou um CD. Essa cópia deve ser feita de forma fiel e íntegra, preservando todas as características e propriedades dos dados originais. Para isso, são usadas ferramentas específicas que garantem a autenticidade e a integridade da imagem, como o uso de hashing de arquivos.Hashing de arquivosO hashing de arquivos é uma técnica que permite gerar um código único para cada arquivo, chamado de hash ou resumo criptográfico. Esse código é uma sequência de caracteres que representa o conteúdo do arquivo e que muda completamente se qualquer alteração for feita no arquivo.Por exemplo, se um arquivo tem o hash 1234567890abcdef, e uma letra for mudada no arquivo, o hash será outro, como 0987654321fedcba. Assim, o hashing permite verificar se um arquivo foi modificado ou não, comparando os hashes antes e depois da cópia.Nesse sentido, o hashing também pode ser usado para identificar arquivos duplicados ou maliciosos.  Outra ocasião que utiliza-se de hashing é em armazenamento de senhas em banco de dados. Não seria prudente armazenas dados sensíveis de forma aberta e sem proteção.Para criar exemplos práticos de hash, você pode ir até a minha ferramenta Cryptool e gerar a hash de qualquer coisa que escrever, podendo escolher entre os tipos MD5, SHA-1, SHA-256 e SHA3-256.Análise de arquivosA análise de arquivos é a etapa em que os dados copiados são examinados para encontrar informações relevantes para a investigação. Essa análise pode ser feita de forma manual ou automatizada, usando ferramentas que permitem visualizar, filtrar, classificar e extrair dados dos arquivos. A análise pode envolver diferentes aspectos dos arquivos, como:  O tipo do arquivo: se é um documento, uma imagem, um vídeo, um áudio, etc.  O formato do arquivo: se é um PDF, um JPG, um MP4, um MP3, etc.  O conteúdo do arquivo: o texto, a imagem, o som, etc.  Os metadados do arquivo: as informações adicionais sobre o arquivo, como o autor, a data de criação, a localização geográfica, etc.Recuperação de arquivosA recuperação de arquivos é a etapa em que se tenta recuperar dados que foram apagados ou corrompidos nos dispositivos de armazenamento.Essa recuperação é possível porque quando um arquivo é apagado ou corrompido, ele não é realmente eliminado do disco, mas apenas marcado como espaço livre para ser sobrescrito por novos dados. Enquanto isso não acontece, o arquivo ainda pode ser recuperado usando ferramentas que conseguem ler os dados marcados como livres.A recuperação depende do tipo de dispositivo de armazenamento e do sistema operacional usado.Para entender melhor vamos dar um breve resumo sobre os discos rígidos de armazenamento.Ferramentas de recuperaçãoAlgumas das ferramentas mais conhecidas e utilizadas na computação forense para recuperação de arquivos:      R-STUDIO: É uma das melhores ferramentas no mercado para recuperação de dados e possui duas versões, a paga e a gratuita, sendo compatível com três sistemas operacionais: Windows, Mac e Linux. Além disso, suporta Desktops, IOS e mantém suporte a dispositivos baseados na web.        DMDE: É mais uma ferramenta de recuperação de dados em discos, mas que possui recursos como editor de disco, gerenciador de partição, cria imagens e clone de discos, recupera arquivos de painel atual, além de fazer a reconstrução de RAID.        Imã Forense: É uma ferramenta que oferece a organizações dos setores público e privado uma forma criativa e inovadora de recuperação de dados forenses para combater os crimes atuais.        Wondershare Recuperar: É uma ferramenta confiável que pode ajudá-lo a realizar a recuperação de dados forenses com facilidade.        AccessData: É uma ferramenta amplamente utilizada em tribunais, governos, exércitos e outros locais altamente confidenciais.        X-Ways: É um programa que oferece uma grande variedade de ferramentas que ajudam no processo de recuperação de dados forenses.        Tecnologias BlackBag: É uma ferramenta confiável que pode ajudá-lo a realizar a recuperação de dados forenses com facilidade.        Cellebrite: É uma ferramenta confiável que pode ajudá-lo a realizar a recuperação de dados forenses com facilidade.        CERT: É uma ‘Ferramentas de Triagem’ confiável que pode ajudá-lo a realizar a recuperação de dados forenses com facilidade.        SIFT: É um programa que oferece uma grande variedade de ferramentas, incluindo log2timeline para gerar uma linha do tempo a partir de logs do sistema, Scalpel para a criação de arquivos de dados, Rifiuti para examinar a lixeira e muito mais.    Atenção: Tentativas excessivas de recuperação e/ou uso incorreto de ferramentas para recuperação de dados dos discos rígidos, sistemas RAID, pendrives e várias outras mídias de armazenamento de dados, podem agravar o problema nas mídias físicas. Portanto, o conhecimento de cada ferramenta para um determinado trabalho e cenário é crucial para evitar danos adicionais aos dispositivos de armazenamento durante a recuperação de dados.Sobre HD e SSDUm HD (hard disk) é um dispositivo de armazenamento que usa discos magnéticos para gravar os dados (mais próximo de uma vitróla). Um SSD (solid state drive) é um dispositivo de armazenamento que usa chips de memória flash para gravar os dados (mais próximo de um pendrive).A funcionalidade da escrita e leitura de dados desses dois tipos de armazenamento têm diferenças importantes no seu funcionamento, como em termos de velocidade e durabilidade.      O HD, ou disco rígido, é uma memória não volátil que usa discos magnéticos para guardar as informações. Esses discos giram em alta velocidade e são lidos por um braço mecânico que se move sobre eles (assim como em uma vitróla com agulha sobre o disco, e por isso a fragilidade o qual qualquer pancada tem risco de corromper e comprometer dados). O processo de escrita e leitura é feito por meio da alteração ou detecção da magnetização dos pontos na superfície dos discos.        O SSD, ou ´unidade de estado sólido`, é uma memória não volátil que usa ‘células’ de memória flash para armazenar os dados. Essas células são acessadas eletronicamente por um controlador de memória que executa as funções do drive. O processo de escrita e leitura é feito por meio da aplicação ou verificação de uma carga elétrica nas células.  Os dois dispositivos têm vantagens e desvantagens em relação à recuperação de dados.  Um HD geralmente tem mais capacidade de armazenamento e é mais barato que um SSD. No entanto, ele é mais lento e mais suscetível a danos físicos. Além disso, ele usa uma técnica chamada fragmentação para otimizar o espaço no disco. A fragmentação consiste em dividir os arquivos em pedaços menores e distribuí-los pelo disco, podendo apenas dificultar a recuperação dos arquivos apagados ou corrompidos.  Um SSD geralmente tem menos capacidade de armazenamento e é mais caro que um HD. No entanto, ele é mais rápido e mais resistente a danos físicos. Além disso, ele usa uma técnica chamada trim para otimizar o desempenho do dispositivo, que consiste em apagar os dados marcados como livres de forma definitiva e isso pode impedir a recuperação dos arquivos apagados ou corrompidos.Então, resumidamente, a principal diferença entre o HD e o SSD é que o primeiro tem partes móveis e mecânicas, enquanto o segundo é todo formado por circuitos integrados. Por isso o SSD acaba sendo mais rápido, silencioso e resistente do que o HD, e também geralmente mais caro (atualmente deu uma boa melhorada).Na hora de escolher entre um HD e um SSD, é preciso levar em conta as suas necessidades e preferências. Se você busca mais desempenho (não estamos falando de ganho de FPS), agilidade e segurança, o SSD pode ser uma boa opção. Se você precisa de mais espaço, economia e compatibilidade, o HD pode ser mais adequado.A recomendação é uso de SSD sempre que possível.Sobre Windows e LinuxWindows e Linux são dois sistemas operacionais que podem ser usados nos dispositivos de armazenamento, os quais também têm vantagens e desvantagens em relação à recuperação de dados.  O Windows é o sistema operacional mais popular e mais fácil de usar. No entanto, ele usa um sistema de arquivos chamado NTFS, que é mais complexo e menos flexível que outros sistemas. O NTFS usa uma estrutura chamada MFT (master file table), que armazena as informações sobre os arquivos, como o nome, o tamanho, a localização, etc. Se a MFT for danificada, a recuperação dos arquivos pode ser impossível.  O Linux é um kernel de uma distribuição, que este sim é um sistema operacional - geralmente gratuito - e bem usado por profissionais e especialistas. No entanto, como estamos falando sobre diversos tipos de sistemas operacionais que operam com o linux, acaba que vários sistemas de arquivos podem ser utilizados, como o EXT4, o XFS, o BTRFS e etc. Em geral, esses sistemas são mais simples e mais flexíveis que o NTFS, já que utilizam uma estrutura chamada inode, que armazena as informações sobre os arquivos, como o tipo, o dono, as permissões, etc. Se o inode for danificado, a recuperação dos arquivos pode ser possível usando ferramentas que conseguem reconstruir a estrutura.  Ambos os sistemas possuem ferramentas e opções de criptografia geral do disco, precisando de uma senha para poder bootar e utilizar o disco, ainda podendo precisar da senha de usuário para entrar no sistema - caso assim esteja configurado.Queima de arquivoO apagamento seguro é uma técnica que permite eliminar os dados de forma definitiva e irreversível dos dispositivos de armazenamento.Essa técnica consiste em sobrescrever os dados várias vezes com padrões aleatórios ou zeros, impedindo que eles sejam recuperados por qualquer ferramenta. O apagamento seguro pode ser feito usando programas específicos ou comandos do sistema operacional.Outra técnica utilizada é a queima e/ou destruição do dispositivo de armazenamento, assim realmente não teria forma de recuperar os dados.Auditoria de sistemaA auditoria de sistema é a etapa em que se verifica as configurações e as atividades realizadas no sistema operacional do dispositivo de armazenamento.Essa auditoria pode revelar informações importantes para a investigação, como:  Os usuários cadastrados no sistema e seus perfis  Os programas instalados e executados no sistema  Os arquivos acessados, modificados ou excluídos no sistema  Os registros de eventos do sistema (logs)  As conexões de rede do sistema  As senhas salvas no sistemaPara realizar a auditoria, são usadas ferramentas que permitem acessar e analisar tais informações, como o Regedit, o Event Viewer, o Netstat, o Nirsoft, entre outros.CriptoanálisePrimeiro vamos falar brevemente sobre o que é criptografia.A criptografia é uma técnica que permite transformar os dados em um código incompreensível para quem não tem a chave ou a senha para ‘descriptografá-los’. Nesse sentido, ela pode ser usada para proteger os dados de acessos não autorizados ou para ocultar informações sensíveis ou ilícitas.Já a criptoanálise é uma etapa em que se tenta decifrar ou quebrar os dados que foram criptografados ou protegidos por algum método de segurança.Existem vários tipos de criptografia, como:  A criptografia simétrica: usa a mesma chave para criptografar e descriptografar os dados. Exemplos: AES, DES e RC4.  A criptografia assimétrica: usa uma chave pública para criptografar e uma chave privada para descriptografar os dados. Exemplos: RSA, ECC, DSA.  A criptografia híbrida: usa uma combinação dos dois tipos anteriores. Exemplo: SSL/TLS.Para realizar a criptoanálise, são usadas ferramentas que permitem tentar descobrir ou forçar as chaves ou as senhas usadas na criptografia, como o John the Ripper, o Hashcat (e até o Wireshark), entre outros.Análise de esteganografiaPara falar sobre como é a sua análise, precisamos primeiro falar sobre o que de fato ela é.A Esteganografia é uma técnica que permite esconder informações dentro de outras informações aparentemente inocentes ou irrelevantes, e pode ser usada para evitar a detecção ou a interceptação dos dados por quem não tem a chave correta ou o conhecimento necessário para decifrar a informação escondida. Ela é frequentemente usada para comunicações seguras, proteção de dados e várias outras aplicações onde a privacidade e a segurança são importantes, além de poder ser utilizada ao arrepido da lei em determinadas situações.Já a Análise de Esteganografia é uma técnica de computação forense que visa detectar e extrair informações ocultas em arquivos digitais, como imagens, áudios, vídeos ou textos, isto é, uma etapa importante de uma investigação forense em que se tenta detectar ou extrair os dados que foram escondidos dentro de outros dados usando algum método de ocultação. Essas informações podem ser usadas para fins maliciosos, como espionagem, sabotagem, fraude ou terrorismo. Por isso, é importante conhecer os métodos e ferramentas que permitem realizar essa análise e revelar os segredos escondidos.Métodos de esteganografia      Um dos métodos mais comuns de esteganografia é a inserção de bits de informação em uma imagem, alterando levemente sua cor ou brilho. Essa alteração é imperceptível ao olho humano, mas pode ser detectada por um programa de computador que analisa o espectograma da imagem, ou seja, a representação gráfica das frequências e intensidades dos pixels. Um exemplo de ferramenta que faz essa análise é o Stegsolve, que permite visualizar diferentes camadas da imagem e identificar possíveis padrões ou mensagens ocultas.        Outro método é usar um editor hexadecimal para modificar diretamente os dados binários de uma imagem, inserindo um texto codificado em uma área específica do arquivo. Um editor hexadecimal é um programa que permite visualizar e editar os dados em formato hexadecimal, que é uma forma de representar números binários usando 16 símbolos (0 a 9 e A a F). (Um exemplo de editor hexadecimal é o HxD, que permite abrir qualquer tipo de arquivo e alterar seus bytes livremente)  Existem também programas específicos para esconder informações em arquivos, como o OpenPuff e o Quick Stego.  O Quick Stego é um software mais simples, que permite esconder apenas textos em imagens, usando um método chamado LSB (Least Significant Bit), que consiste em substituir o bit menos significativo de cada pixel pelo bit correspondente do texto.  Já o OpenPuff é um software que usa técnicas avançadas de criptografia e compressão para ocultar vários tipos de arquivos em imagens, áudios ou vídeos. Ele também permite escolher um nível de segurança e uma senha para proteger os dados.Uma outra forma de esconder informações em imagens é usar QR Code.  Códigos QR (Quick Response) são códigos de barras bidimensionais que podem armazenar dados alfanuméricos. Este pode ser gerado por um site ou aplicativo, como o QR Code Generator, e inserido em uma imagem usando um editor gráfico, como o Photoshop. Para ler o código, basta usar um leitor específico, como o QR Code Reader, que pode ser instalado em um smartphone ou tablet.Um método mais sofisticado de esteganografia é usar textos em spam para ocultar mensagens.  Esse método SpamText consiste em gerar textos aleatórios ou sem sentido, usando palavras-chave relacionadas a um assunto específico, como medicamentos, viagens ou negócios. Esses textos são enviados por e-mail ou publicados em sites ou redes sociais, com o objetivo de despistar os filtros anti-spam e atrair a atenção dos destinatários. No entanto, esses textos podem conter informações codificadas, que podem ser decifradas por quem conhece o algoritmo usado para gerá-los. Um exemplo de ferramenta que faz isso é o Spam Mimic, que permite escrever e decodificar mensagens usando vários tipos de spam.Além disso tudo, existe uma forma muito simples de esteganografia que qualquer usuário normal de windows pode fazer para esconder arquivos em imagens.  Esse método consistem em usar o WinRAR. Como já devem conhecer, é um programa que permite compactar e descompactar arquivos em vários formatos, como ZIP ou RAR. Para esconder um arquivo em uma imagem, basta selecionar os dois arquivos no Windows Explorer, clicar com o botão direito do mouse e escolher a opção “Adicionar ao arquivo…”. Na janela que se abre, escolher o formato RAR e marcar a opção “Criar arquivo SFX”. Isso vai gerar um arquivo executável com a extensão .exe e o ícone da imagem original. Para extrair o arquivo oculto, basta executar o arquivo .exe e escolher a pasta de destino.Como se pode ver, existem vários métodos e ferramentas para realizar a análise de esteganografia, uma técnica essencial para a computação forense. Essa análise pode revelar informações valiosas para a investigação e solução de crimes cibernéticos, bem como para a proteção da segurança e da privacidade dos usuários. Por isso, é importante estar atento aos sinais de que uma imagem pode conter algo mais do que aparenta, e usar os recursos adequados para desvendar os mistérios da esteganografia.Lista de Ferramentas ForenseSegue algumas ferramentas comuns, algumas podendo ser facilmente achadas em distribuições linux com foco em área de segurança ou forense, como Kali.      Volatility: Este Framework é uma coleção de ferramentas, de código livre e gratuita, para análise de memória RAM. Normalmente utilizada em ambientes Linux, e já presente em algumas distribuições, como o Kali Linux.        FTK Imager: É uma ferramenta de visualização e geração de imagens de dados que permite examinar arquivos e pastas em discos rígidos locais, unidades de rede, CDs/DVDs e revisar o conteúdo de imagens forenses ou despejos de memória.        CAINE: Computer Aided Investigative Environment é o Live CD do Linux que contém uma grande quantidade de ferramentas forenses digitais.        HxD: É um editor hexadecimal de fácil utilização que permite realizar edição e modificação de baixo nível de um disco bruto ou da memória principal (RAM).        ExifTool: É um aplicativo de linha de comando usado para ler, gravar ou editar informações de metadados de arquivos.        Sistema IPED: É um programa computacional forense desenvolvido no Brasil, por peritos federais, para a investigação na Operação Lava Jato.        Binwalk: É uma ótima ferramenta quando temos uma imagem binária e temos que extrair arquivos embutidos e códigos executáveis deles.        p0f: É uma ferramenta que pode identificar o sistema operacional de um host de destino simplesmente examinando os pacotes capturados.        pdf-parser: É uma ferramenta que analisa um documento PDF para identificar os elementos fundamentais usados ​​no arquivo PDF analisado.        Dumpzilla: É uma ferramenta para extrair todas as informações interessantes e descobrir o máximo de dados forenses possíveis do armazenamento do Mozilla Firefox, Google Chrome e Internet Explorer.  Links referenciais sobre ferramentas forenseAlguns links interessantes para ter de referências sobre as ferramentas.  10 ferramentas gratuitas de um perito Forense Digital - Medium: Forense Digital Brasil  Principais ferramentas de recuperação - Academia Forense Digital  KALI LINUX - FERRAMENTAS FORENSES  Kali Linux Ferramentas Forense - Tutorial  LMelhores ferramentas do Kali Linux  21 Ferramentas de penetração importantes do KaliRecomendação de conteúdoPara começar a estudar forense, você pode estudar através de diversos conteúdos gratuitos e pagos pela internet, ou até matérias específicas e/ou cursos de extensõies de uma faculdade. Nunca pare de estudar, sempre busque por mais conhecimento. Talvez você queira até estudar para concurso e trabalhar para a polícia federal como investigador forense digital, isso demandaria bastante estudo não apenas dos conteúdos derivados deste post, mas dos conteúdos do concurso. Um futuro difícil e promissor que pode ser traçado por você, mas calma… um passo de cada vez, sem pular etapas.Eu tenho três recomendações de conteúdos para quem não sabe nada e quer começar:  Primeiro: O livro “Desvendando a Computação Forense” da Novatec é um bom livro até para quem não sabe nada de computação, pois ele passa pelo básico de computação e explica muito bem sobre forense digital, tendo sido escrito por profissionais da área. Boa porta de entrada.  Segundo: Vídeos do youtube. Existe diversos vídeos super bons em conteúdo e gratuitos, também sendo ótimo como porta de entrada. Um canal que eu recomendo é o “Fábrica de Noobs”, ele possui diversos vídeos sobre o básico de forense geral, esteganografia e criptografia (com pdf).  Terceiro: Aulas disponibilizadas ao público. Esta é basicamente parte da segunda dica. Diversos professores universitários decidem postar suas aulas gratuitas em canais do youtube, desde gringos a brasileiros. Quando eu estudava na UFRJ e fiz a matéria de segurança, meu professor gravava a aula e postava em seu canal do youtube (infelizmente so gravava pela tela do pc, então não tinha ele apontando no quadro sobre o que fala e o audio nunca ficava distante, mas já era algo). Dessa forma quem precisava faltar tinha o conteúdo, além de poder ficar para qualquer entusiasta. Nesta matéria havia a parte de forense e talvez ainda seja possível achar no youtube, seu nome é Claudio Miceli e qualquer conteúdo dele será super recomendado por mim.Espero que tenham gostado desta publicação. Não sou focado na área de forense e ainda tenho muito que aprender, basicamente tentei escrever o pouco que sei de forma introdutória. Se tiver uma forma melhor de introdução ou até se eu tiver esquecido algo, favor me deixe sabendo. Tente comentar, mandar e-mail ou direct, tanto faz. Abração!"
  },
  
  {
    "title": "Desvendando os perigos em uma WiFi",
    "url": "/posts/perigos-wifi/",
    "categories": "Way Of Security",
    "tags": "Redes, WiFi, Hacking",
    "date": "2021-05-12 00:00:00 -0300",
    





    
    "snippet": "Além do Sinal: Conhecendo os principais perigos de uma rede wirelessAs ‘Ameaças Invisíveis’ que te farão compreender os principais riscos das redes sem fio (wireless). Será apresentado alguns dos “...",
    "content": "Além do Sinal: Conhecendo os principais perigos de uma rede wirelessAs ‘Ameaças Invisíveis’ que te farão compreender os principais riscos das redes sem fio (wireless). Será apresentado alguns dos “Perigos Ocultos” ignorados pela maioria da população.É comum ouvirmos coisas que soam como:“Aah, qual o problema de usar wifis alheias e compartilhar minha rede com qualquer pessoa? Essa galerinha de segurança complicam tudo… cheios de regrinha chata!”Por isso acho importante uma publicação como esta, que mostrará alguns riscos de segurança que podem estar presente em diversas situações ‘banais’ do dia-a-dia. Entretando, nesta publicação ainda não terá algo prático, apenas em outras publicações e vídeos.Sobre o que será apresentadoVocê já se perguntou como é fácil invadir uma rede wireless? Você sabe quais são os riscos de usar uma rede wifi de terceiros ou então o perigo de ter credenciais fracas na sua própria rede? Quer saber como funciona a proteção e a invasão em redes WEP e WPA-PSK, e quais são os perigos que você pode enfrentar se alguém conseguir acesso à sua rede sem a sua permissão? Quer ver algumas dicas de como se proteger e evitar que seus dados sejam roubados ou manipulados por hackers mal-intencionados?Nesta postagem falaremos exatamente sobre isso. Você sairá compreendendo os Perigos das Redes Wireless.  Lembrando que conteúdos mais técnicos e/ou práticos de wifi hacking estarão em outra publicaçãoBreve explicação sobre a segurança e os protocolosAs redes wireless usam diferentes protocolos de segurança para criptografar os dados que são transmitidos entre os dispositivos e o roteador. Os mais comuns são o WEP (Wired Equivalent Privacy) e o WPA-PSK (Wi-Fi Protected Access Pre-Shared Key). O WEP é um protocolo antigo e muito vulnerável, que pode ser facilmente quebrado por programas que capturam os pacotes de dados e descobrem a chave de criptografia. O WPA - WPA2 ou WPA3 - é um protocolo mais moderno e seguro, que usa um algoritmo mais complexo para gerar a chave de criptografia, que muda a cada conexão. No entanto, também pode ser invadido se o usuário escolher uma senha padrão ou fraca, já que pode ser descoberta por programas que testam milhares de combinações possíveis até encontrar a correta. Esse método é chamado de brute force (força bruta) e o arquivo que armazena as senhas geralmente é chamado de wordlist. Inclusive, foi assim que invadi a rede WiFi de uma vizinha utilizando o pacote aircrack e gerando uma wordlist com crunch.Minha primeira invasão a uma WIFIEntre 2019 e 2020 eu percebi um possível padrão nas credenciais que vinham com o modem roteador de uma operadora grande e isso me fez criar um script para testar essa minha teoria. Assim, sempre que alguém próximo utilizava uma rede com as credenciais padrões desta operadora, eu verificava se a senha estava dentro do resultado da wordlist provinda do script q fiz para força bruta. O padrão era real, sempre me retornava uma wordlist que uma das opções era certeira na credencial da rede com padrão de fábrica. Em outras palavras, quando a análise combinatória era feita de acordo com o padrão que eu detectei, entre os resultados gerados sempre estaria a senha correta da rede e isso acarretava em um ataque eficaz ao usar o arquivo com aircrack, ao testar todas as possibilidades presentes no arquivo. Fui publicar com finalidade acadêmica e meu script precisou ser tirado do ar pós recebimento de uma notificação para retirada do repositório do github - eu também acabei vacilando por ter deixado o nome da empresa sair junto. Hoje ela não utiliza mais o mesmo padrão, mas ainda temos muitos usuários que estão utilizando esta configuração antiga e minha vizinha é um exemplo - Até por isso que precisei retirar meu script do ar (fiz um vídeo específico e um post sobre isso. O vídeo será postado futuramente e a postagem em revisão).  Para saber mais sobre toda a parte prática por trás, acesse a postagem&gt; SecLab: Hackeando rede wirelessSendo rede é local não é preciso se preocupar?“Matheus, mas para alguém entrar na minha rede ela precisa estar em uma determinada distância. Acho besteira e exagero se bitolar”. Imagino que se você mora em uma casa mais isolada e grande, precisando estar dentro do seu terreno para ter acesso a rede, até pode ser mais tranquilo sim, mas ainda é importante se atentar a segurança o mínimo possível. Agora, uma realidade diferente e bem comum e se você mora em um prédio no centro de uma cidade - geralmente lugares que pessoas gostam por poderem ir andando para qualquer lugar que precisarem. Estes lugares não apenas estão com diversas redes residenciais como também corporativas por perto, estando cheio de ambientes que podem ter a distância necessária - mesmo sendo vizinhos de apartamento. Se um cara malicioso está com seu notebook em um café e consegue detectar sua rede, você pode sim sofrer ataques - como desconexão ou ter a senha descoberta -, e por isso é super necessário se preocupar com segurança e talvez nem compartilhar sua senha de wifi para qualquer visitante passageiro.Afinal, o que de ruim pode mesmo acontecer se alguém entrar na sua rede privada?Possíveis ataques do invasor e seus riscosBom… se um invasor conseguir se conectar à sua rede wireless, ele pode fazer várias coisas maliciosas, como:      Fazer um ataque de DNS Spoofing/Poisonning, que consiste em alterar o endereço IP (Internet Protocol) associado a um nome de domínio no DNS (Domain Name System) local da rede, fazendo com que os dispositivos da rede acessem um site falso em vez do verdadeiro. Por exemplo, ele pode fazer com que você acesse um site falso do seu banco, que tem a mesma aparência do original, mas que na verdade é uma armadilha para capturar seus dados bancários com phishing (pois é, neste caso não adianta saber que é o link original).        Fazer um ataque de MITM (Man In The Middle), que consiste em interceptar os dados que você envia e recebe pela rede, podendo ler, modificar ou bloquear as informações. Por exemplo, ele pode ver quais sites você visita, quais senhas você digita, quais mensagens você envia ou recebe, quais arquivos você baixa ou compartilha, etc (tá aí a importância da criptografia).        Fazer um ataque de ARP Spoofing/Poisonning, que consiste em enganar os dispositivos da rede sobre qual é o endereço físico / MAC (Media Access Control) do roteador, fazendo com que eles enviem os dados para o invasor em vez do roteador. Assim, ele pode controlar todo o tráfego da rede e fazer o mesmo que no ataque de MITM.        Fazer um SSL Stripping, que se resume no invasor removendo a criptografia SSL/TLS do tráfego da vítima, permitindo que ele leia e manipule o tráfego.        Fazer um Rogue Access Point, que se resume no invasor criar um ponto de acesso Wi-Fi falso para interceptar o tráfego dos usuários.  . Um bônus que podemos falar sobre ataques é de um em que não necessariamente o atacante estará já com acesso garantido em sua rede, mas apenas alcance a mesma. Este ataque é chamado de DeAuth e neste caso se resume em te derrubar da rede, fazendo sua conexão cair e te forçando a reconectar, mas pode ser feito de forma que você não de reconecte por muito tempo. Este ataque pode ser uma etapa importante para um wifi hacking, que para poder capturar o que chamamos de handshake é preciso esperar alguém se conectar ou forçando uma vítima a cair e voltar rapidamente com desautenticação. As explicações mais técnicas estarão em outra publicação, mas resumidamente este ataque fica enviando pacotes de dissociação/desautenticação para desconectar dispositivos da rede wireless.Resumindo a ópera dos riscos em poucas palavrasFazendo um resumo sobre os principais riscos comentado de forma simples.Uma vez que se conecta com o roteador, os dispositivos da rede atualizam uma tabela ARP, que associa endereços IP a endereços MAC. Um ataque comum em redes wireless é o ARP Spoofing, onde o invasor envia pacotes falsos para alterar essa associação, fazendo com que seu dispositivo se comunique com ele em vez do roteador. Assim, ele pode monitorar ou bloquear seu acesso à rede. Além disso, o invasor pode alterar o DNS local da sua rede para redirecioná-lo para um site falso quando você digita o nome de um site verdadeiro, uma tática conhecida como phishing. Por exemplo, ao digitar www.instagram.com, você pode ser levado a um site que se parece com o Instagram, mas que é uma armadilha para roubar seus dados. Esses são só alguns exemplos do que pode ser feito pelo invasor.Mas então, sabendo disso tudo, como ter menos riscos? como estar menos vulnerável?Medidas de segurançaComo você pode ver, esses ataques podem causar sérios danos à sua privacidade, à sua segurança e até mesmo à sua conta bancária. Por isso, é muito importante tomar algumas medidas para se proteger e evitar que sua rede wireless seja invadida. Algumas delas são:      Evite dar acesso a sua rede para qualquer um, isso também pode ser um problema. Ainda mais se sua rede tiver um alcance até a rua ou estabelecimentos, por exemplo. (Se possível ter uma rede separada para visitantes)        Usar um protocolo de segurança adequado para sua rede wireless. Evite usar o WEP, que é muito fraco e fácil de quebrar sem precisar de wordlist. Prefira usar o WPA2-PSK, que é mais forte e difícil de invadir. Se possível, use a WPA3, que é a versão mais recente e avançada da criptografia wireless.        Evite redes wireless públicas. Não use redes wifi públicas sem proteção, se você precisar usar uma rede wifi pública, como em um café, em um hotel ou em um aeroporto, ao menos use uma VPN (Virtual Private Network) para criptografar seus dados e impedir que eles sejam interceptados por terceiros - ProtonVPN tem versão gratuita. Também evite acessar sites sensíveis ou fazer transações financeiras nessas redes.        Ative o filtro de endereços MAC no seu roteador. O MAC é um código único que identifica cada dispositivo que se conecta à rede wireless. Com o filtro ativado, você pode permitir ou bloquear o acesso de determinados dispositivos à sua rede, aumentando o controle e a segurança.        Para ficar mais tranquilo, pode tentar verificar a tabela ARP para verificar se os IP’s e os endereços MACs estão certos e não com algum duplicado, como um endereço físico para 2 IPs diferentes.        Desative o WPS no seu roteador. O WPS é uma função que facilita a conexão de dispositivos à rede wireless sem a necessidade de digitar a senha. Porém, essa função também pode ser explorada por hackers para invadir sua rede, pois usa um código PIN de 8 dígitos que pode ser descoberto por força bruta.        Mantenha o firmware do seu roteador atualizado. O firmware é o software que controla o funcionamento do seu roteador. Ele pode conter falhas ou vulnerabilidades que podem ser exploradas por hackers para invadir sua rede. Por isso, é importante verificar se há atualizações disponíveis e instalá-las periodicamente.        Escolher uma senha forte para sua rede wireless. Não use senhas padrão ou óbvias, como o nome do roteador, o seu nome, a sua data de nascimento, etc. Use senhas longas e complexas, isto é, que misturem letras maiúsculas e minúsculas, números e símbolos, além de possuir ao menos um comprimento mínimo de 8 e recomendado de 16 caracteres. Em caso de empresas ou de qualquer conta importante, também pode ser uma boa que passe a mudar a senha periodicamente e não a compartilhe com estranhos ou blocos de notas alheios.        Ter um antivírus atualizado e firewall no seu dispositivo. Esses programas podem detectar e bloquear tentativas de invasão ou de infecção por vírus ou malwares. Mantenha-os sempre atualizado, inclusive seu sistema operacional, e faça varreduras periódicas para eliminar possíveis ameaças.        Usar autenticação de dois fatores. Ao configurar a autenticação de dois fatores em contas on-line, é mais difícil para os invasores obter acesso a essas contas, mesmo se eles conseguirem obter senhas.        Verificar se o site que você está acessando é seguro. Observe se há um cadeado ou um https na barra de endereço e se o nome do site está correto. Desconfie de sites que pedem informações sensíveis ou que oferecem ofertas muito vantajosas.  Resumindo a ópera das medidas de segurançaA segurança da rede wireless é crucial. Evite dar acesso irrestrito à sua rede, especialmente se ela alcança áreas públicas. Use protocolos de segurança robustos como WPA2-PSK ou WPA3 e evite redes públicas desprotegidas. Se necessário, use uma VPN para criptografar seus dados em redes públicas.Ative o filtro de endereços MAC no roteador para controlar o acesso à rede e verifique regularmente a tabela ARP para evitar duplicações. Desative o WPS, que pode ser explorado por hackers, e mantenha o firmware do roteador atualizado para corrigir possíveis vulnerabilidades.Escolha senhas fortes e complexas para sua rede wireless e mude-as periodicamente. Mantenha um antivírus atualizado e um firewall ativo no seu dispositivo e use a autenticação de dois fatores sempre que possível.Por fim, verifique a segurança dos sites que você acessa, procurando por um cadeado ou “https” na barra de endereço. Desconfie de sites que solicitam informações sensíveis ou oferecem ofertas muito boas para serem verdadeiras. A segurança online é uma prática contínua e requer vigilância constante.Considerações finaisSeguindo essas dicas, você pode aumentar a sua segurança e a da sua rede wireless, e evitar que seus dados sejam expostos ou roubados por hackers. Lembre-se que a internet é um lugar maravilhoso, mas também perigoso, e que você deve estar sempre atento e protegido. As últimas dicas colocadas servem para outros cenários, não apenas para redes wireless corporativas e/ou residensiais. Talvez algumas coisas possam parecer um exagero dependendo da sua realidade, porém em muitos casos a coisa não pode ser vista assim - principalmente se estivermos falando de uma empresa - e cabe a você decidir isso agora que sabe de muitos dos riscos. Nesses casos empresariais, colocar uma rede de visitante separado de qualquer sistema interno é super importante, não é recomendado compartilhar a mesma rede usada pelos funcionários para os clientes.Espero que este post, com essas dicas, tenha sido útil e esclarecedor para você e sua empresa. Então, caso tenha gostado deste conteúdo, compartilhe com seus amigos nas redes sociais e deixe seu comentário abaixo.Atenciosamente,Matheus Laidler."
  },
  
  {
    "title": "Terminal do zero",
    "url": "/posts/terminal/",
    "categories": "Road 2 Technology",
    "tags": "linux, terminal, comandos",
    "date": "2020-02-25 00:00:00 -0300",
    





    
    "snippet": "Linux: Dando início a uma fase Terminal- Dominando linha de comando UNIX Perfeito para quem quer conhecer, aprender, relembrar ou masterizar -   Material focado nos comandos usados voltado para dis...",
    "content": "Linux: Dando início a uma fase Terminal- Dominando linha de comando UNIX Perfeito para quem quer conhecer, aprender, relembrar ou masterizar -   Material focado nos comandos usados voltado para distribuições baseados em Debian, como o Ubuntu. Mesmo que algumas outras tenham suas pequenas variações, em geral são a mesma coisa. Alguns comandos podem, eventualmente, necessitar de instalação visto que nem todos os sistemas linux terão tais recursos instalados por padrão. Podendo ser feito via comandos ensinados neste post.Contextualização e IntroduçãoAfinal: O que é Linux? O que é Terminal?Para começar de uma boa maneira, gostaria de contextualizar um pouco sobre o que é cada coisa que abordaremos, para evitar que fique perdido.    Um comando nada mais é que uma instrução/palavra especial que pode representar uma ou mais ações.    Um interpretador de comandos, mais conhecido como shell ou modo texto, é o responsável por interpretar tais instruções - enviadas pelo usuário e seus programas - para o kernel, que é o núcleo do sistema operacional com a função de fazer a ligação entre o hardware e o software. O shell é o mecanismo por trás dos programas conhecidos como simuladores de terminal, que são os tipos de programas que usamos para usar o interpretador de comandos.  terminal era uma antiga máquina composta basicamente por monitor e teclado.  Usada apenas através de linha de comando por não ter uma interface gráfica como hoje.  Infelizmente, ainda existem pessoas que só veem ‘Linux’ desta maneira…Em distribuições Linux você poderá ter vários interpretadores de comandos de sua escolha, entre eles temos o bash, zsh (ou zshell), tesh, sh, csh e ash. O mais utilizado e conhecido é o Bash, normalmente ele vem como padrão.    Existem diversos programas com a função de te entregar um interpretador funcional,  o mais conhecido é chamado de Terminal. Isso traz mais liberdade de escolha para o conforto do usuário. Tendo em vista que esses programas têm o mesmo propósito, no final das contas eles geralmente acabam sendo a mesma coisa, mesmo que alguns sejam mais customizáveis que outros.  Linux nada mais é que o nome do kernel desenvolvido em código aberto por Linus Torvalds.Sistema operacional em si são o que chamamos de ‘distribuições’, sendo elas Ubuntu, Fedora, Linux Mint, Kali, Pop OS!, entre outros. Como muitos confundem e misturam as coisas, alguns nem se dão conta de que o Android também é Linux.  O Kernel faz parte do sistema operacional e trabalha em baixo nível por ser o núcleo do sistema. É nele onde trabalham os drivers, por exemplo. Pode-se dizer que, para um sistema operativo, o Kernel é tal qual o que o motor é para um carro. Portanto, falar “o sistema operacional Linux” está tecnicamente errado. A generalização com Linux pode ser feita para facilitar o entendimento da mensagem, o problema vem quando começa a cobrança de alguns para com “o linux”.~Aprendendo pelo Windows;Windows Subsystem for LinuxAntes de mais nada, acho importante falar sobre os usuários de Windows.Muitos querem aprender a usar o terminal linux, mas continuam “presas na janela”, e isso não é um problema, necessariamente. Mesmo que não possa formatar o pc, você ainda tem três opções que podem quebrar seu galho:      Dual boot : Sistema Linux e Windows juntos na mesma máquina.        Máquina Virtual : Linux rodando dentro do seu windows por uma máquina virtual, como virtualbox.        WSL - Subsistema do Linux para Windows : Podendo utilizar o Terminal Ubuntu em Windows ou até um sistema linux por inteiro através de um container.    O WSL2, por mais que não seja a mesma coisa de usar diretamente um sistema linux real, pode se tornar um excelente quebra galho para quem não quer se desfazer do seu sistema e costume pessoal de uso, principalmente por motivos profissionais.    Aqui vai um rápido guia para utilizar este terminal no seu windows:        Apertar “Win+r”        Digitar “optionalfeatures”        Ativar / Marcar a caixinha “Subsistema do Windows para Linux”        Reiniciar        Baixar o terminal linux na loja de apps da microsoft pelo nome da distribuição, como por exemplo o Ubuntu.    ~Caso não dê certo, aparecendo uma mensagem de erro no terminal, não se assuste!    Tente, então, abrir o powershell como administrador e cole cada comando abaixo, seguido de reinicialização da máquina:  dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestartdism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestartPronto! Já tendo baixado o terminal na microsoft store, agora é só abrir, configurar o usuário e utilizar o terminal pelo windows como se tivesse no Ubuntu. Já está preparado para botar a mão na massa e seguir a documentação na prática.Claro, lembre-se que usar o WSL é apenas um quebra galho e tem suas limitações, fique atento quanto a isso. Para funcionar o WSL e as máquinas virtuais junto, antes de reiniciar, aproveite o powershell/cmd já aberto como administrador e cole:  ```powershell bcdedit /set hypervisorlaunchtype off ```  Aviso: Normalmente, para funcionar é recomendado que esteja com o sistema atualizado, pelo menos até a build 16215.0, e necessariamente precisa ser um sistema com arquitetura de 64 bits.Fique atualizado aos requisitos e modo de instalação estando de olho no site da Microsoft. Este guia foi apenas o que eu testei a um tempo e deu certo, então - por não ser um guia oficial - é recomendado seguir o tutorial oficial e qualquer problema deve ser resolvido com o suporte deles.                    ~ Instalar o WSL (Subsistema Windows para Linux) no Windows 10        Microsoft Docs -&gt; https://docs.microsoft.com/pt-br/windows/wsl/install-win10            Tá, ok… tudo certo até agora, mas… … antes de irmos direto aos comandos e explicações, vamos tentar desmistificar algumas coisas…Desmistificando o PinguimÉ comum a propagação da ideia de que “Linux é para usuários avançados” e/ou “para programadores”, além do “precisar saber e dominar linhas de comando”. Essas coisas assustam muitos usuários alheios sem necessidade, como se fosse difícil e obrigatório. Até porque, a maioria dos tutoriais disponíveis na internet são feitos via terminal, o que gera essa falsa sensação, para leigos, que para fazer as coisas sozinho precisaria ser ‘expert’. Claro que eles estão passando de uma forma que dificilmente dá errado e que é o rápido e prático copiar e colar, mas isso acaba alimentando um pouco essa problemática e faz com que certos leigos passam longe da ideia de usar ou testar o ‘pinguim’ - pelo menos até que se torne realmente necessário usar e aprender, ainda podendo vir um certo nervosismo de aprender para quem não quer sair da zona de conforto.  O fato é que não é obrigatório e nem necessário saber sobre linhas de comando para utilizar o sistema no seu dia a dia, principalmente quando se trata de um usuário comum, já que tudo de necessário poderá ser feito via interface gráfica, assim como no Windows, Mac e Android. Para simplificar ainda mais, os novos usuários linux não precisam ir pro ubuntu direto, o ideal seria escolher uma distribuição agradável e fácil de mexer, como Zorin OS e Linux Mint, excelentes para quem quer um sistema bom, leve, baseada em ubuntu e com visual mais próximo do que já está acostumado com o windows.  Ainda que não seja necessário dominar linhas de comando, particularmente ainda acho interessante ter alguma noção para saber o que está rodando ao ‘copiar e colar’ os comandos de tutoriais alheios, por exemplo, e isso também deve ser considerado com prompt de comando do windows. Não é nada difícil, a maior parte dos comandos chegam a ser intuitivos e fáceis de memorizar por serem abreviações de palavras, autoexplicativos ou de fácil memorização._Mesmo assim, reforço mais uma vez que para “usar linux” não é necessário ser um usuário avançado e aprender comandos. Já para usuários mais avançados e estudantes de alguma área da computação, saber e dominar o terminal pode se tornar algo fundamental, até porque o terminal se torna uma ferramenta muito útil - inclusive para saber algum erro de alguma aplicação rodada através dele. Por isso aq ajudo vocês a dominarem essa ferramenta, listei uma série de comandos para que seja possível fazer diversas coisas do seu dia a dia direto pelo terminal, e por isso que é um material bastante extenso, mas bem completo.Terminal à primeira vista  Tópico voltado a quem ainda não conhece direito o terminal, mostrando o que é cada coisa de sua estrutura.Ao abrir o terminal podemos notar que existe uma formatação padrão inicial, exemplo;            Matheus@Ubuntu:~$ ==&gt; ‘Usuário’ @ ‘PC’ : ‘diretório’ ‘modo de usuário’  Usuário é o campo sobre o nome da conta da atual sessão, mostra qual conta está sendo usada no terminal atualmente, começando com a que está usando o sistema. Você verá como poderá criar novos perfis, configurar e alternar entre eles pelo próprio terminal.  PC é o campo sobre o nome dado para sua máquina, normalmente dado ao instalar o sistema.  Diretório é o campo sobre a pasta em que se encontra no momento, ou seja, mostra em qual diretório está acessando pelo terminal. Por padrão vem na pasta home do usuário, indicado como ~, diretório o qual contém os documentos, downloads, etc.  _Modo de usuário é o campo sobre o modo do usuário dessa sessão.Normalmente a simbologia do privilégio de usuário comum é dado como $.Existe o modo de superusuário e certos comandos o exigem para serem feitos. Ao mudar o tipo de usuário de comum para o de privilégio elevado, o símbolo pode passar a ser representado por # se não for alterado o privilégio apenas para comandos isolados.Mas e então, como usar outros usuários? Como obter o privilégio de superusuário? Veremos isso nos próximos tópicos.Principais comandos para se virar no terminal  Aprimorando conhecimento.Dominando os principais comandosÉ importante saber primeiro dos comandos man e help de algum comando específico, pois te auxiliarão a aprender praticamente qualquer comando. Com eles você aprenderá como usar e o que eles fazem.man &lt; comando &gt; ;&lt; comando &gt; -h  ;   &lt; comando &gt; --help ;&lt; comando &gt; --h ;help &lt; comando &gt;Usuários e PrivilégiosComandos básicos para administrar os usuários e seus privilégiosUsar comandos que requerem privilégio (parte 1)  Certos comandos só serão executados se o usuário tiver um privilégio elevado.Para usarmos comandos específicos como um superusuário podemos usar o comando sudo. sudo &lt; comando &gt;sudo su  Pode ser lido como Superuser DO ao usá-lo antes de algum comando. Fica mais fácil de lembrar.Se para executar o comando x é necessário privilégio de superusuário, escrevemos “superusuário faça x”, ficando “super user do x”, resultando em “sudo x” abreviadamente.  Explicação bem detalhada e importante sobre como funciona o sudo no final deste sub-tópico, ou seja, na parte 2 do Usar comandos que requerem privilégio.  ps: Somente usuários do grupo sudo podem usar este comando. O padrão do sistema já vem neste grupo.Criação de usuários  Comandos:    adduser  ;  useraddO useradd cria um novo usuário mas sem criar uma pasta home para o mesmo, apenas adiciona um novo usuário ao arquivo /etc/passwd,  diferentemente do comando adduser. Porém, ambos precisam de permissão para serem executadas.Exemplo;Para criar o usuário banana;sudo useradd banana  (sem pasta home própria)sudo adduser banana  (com pasta home própria)Normalmente, em sistemas como Ubuntu e outros, o comando adduser tende a criar o usuário completo, com senha predefinida, nome completo, informações extras etc (sendo opcional não colocar elas), pasta home, etc. Já em algumas outras ainda precisam add alguma dessas coisas por outros comandos, como a criação da senha, que veremos no próximo tópico.  Num geral, o comando adduser também pode conseguir adicionar usuários a um grupo, como no grupo ‘sudo’ para executar comandos que exijam privilégio: sudo adduser banana sudoPara moderar os usuários existe o comando usermod, tendo algumas funções bem interessantes:Criar nova pasta home; alterar possível data de expiração; alterar grupos; alterar nomes; alterar shell; etc  Num geral, o comando usermod também pode adicionar um usuário ao grupo sudo:  sudo usermod -aG sudo banana      main example: usermod -aG      -a = Anexar (attach)    -G = Grupo (group)  Manipulação da senha de usuáriosCom o comando passwd adicionaremos, tiramos ou alteramos a senha de algum determinado usuárioBastando digitar o nome do mesmo (Exemplo 1);Para retirar a senha dele basta usar o -d (Exemplo 2);Para trocar ou adicionar senha do root não precisa necessariamente especificar seu nome, o passwd reconhece o root se caso nenhum usuário seja especificado. Acaba bastando usar o sudo (para privilégio) e o passwd juntos para alterar ou adicionar a senha. (Exemplo 3);Exemplo 1; Mudança de senha&gt;```bashbanana@pc:~$ passwd bananaChanging password for banana.Current password:New password:Retype new password:passwd: password updated successfully```Exemplo 2; Retirando senha&gt;```bashbanana@pc:~$ sudo passwd -d banana[sudo] password for banana:passwd: password expiry information changed.```ou```bashsudo passwd -d banana[sudo] senha para banana: Removendo senha para o usuário banana.passwd: Sucesso```Exemplo 3; Adicionando e/ou alterando a senha do root&gt;```bashbanana@pc:~$ sudo passwd[sudo] password for banana:New Password:Retype new password:passwd: password updated successfully```(pediu a senha do user banana para alterar a do root - explicação sobre isso na parte dois do tópico de privilégio sudo)Para saber outras opções do comando, digite:passwd Exclusão de usuárioPara deletar o usuário ‘banana’ que criamos, podemos usarsudo userdel bananasudo deluser banana Com o deluser Também podemos retirar o usuário de algum grupo. Podemos retirar o banan do sudosudo deluser banana sudoTroca de usuáriosu é o comando que se dá para a troca de usuários, vem do inglês “substitute user” - também podendo ser lido como Switch User. Caso ele seja utilizado solto, ou seja, sem especificar qual usuário deseja, ele assumirá que quer trocar para o superusuário do sistema, normalmente chamado de root. Logo, o su e su root são a mesma coisa - sendo assim, pode memorizar o comando su sozinho como Super User.  su -&gt; Switch user su -&gt; Super UserA diferença entre o su - e o su é que, o “-” específica para o comando simular um login real/direto, já o su indica apenas uma “troca de usuário aqui”. Ou seja, o comando su ‘username’ troca de usuário se mantendo no diretório atual, diferentemente de quando usa su - ‘username’, que já troca de usuário direto pra própria ‘home’ do usuário logado.  Lembrando: Pasta ‘home’ é a pasta principal de cada usuário, onde fica os Documentos, Downloads, Desktop, etcTrocando para o novo usuário chamado banana|-----------------------------||  Exemplo 1;                  ~ Troca de usuário normal| matheus@pc:~$ su banana     | Password:| banana@pc:/home/matheus$ |-----------------------------|| Exemplo 2;                 ~ Troca de usuário simulando um login direto| matheus@pc:~$ su - banana| Password:| banana@pc:~$|-----------------------------|  Dica  O comando exit pode ser usado tanto para sair da conta do usuário logado pelo terminal, quanto para fechar o terminal ao ser usado no seu usuário padrão.Grupos para usuáriosJá falamos por cima de alguns comandos em relação a grupos anteriormente, mas aqui estão os comandos para tal ação:Criando grupos:sudo addgroup groupnamesudo groupadd newgroupDeletando grupos:sudo groupdel groupnamesudo delgroup groupnameModerando grupos:sudo groupmod -hsudo modgroup -h      Com este comando podemos fazer algumas coisas, como alterar o nome dos grupos:  sudo groupmod -n novo_nomeAdicionando um usuário a um grupo;usermod -aG group usernameadduser username groupUsar comandos que requerem privilégio (parte 2)Entenda melhor o comando SUDOEle funciona para dar permissões de outros usuários - em geral do superusuário - para o atual, bastando apenas digitar a senha do mesmo.  Porém, isso só funciona pois ele foi adicionado no grupo sudo, as distros normalmente já deixam o primeiro usuário com privilégios sudo e por isso o comando funciona sem problemas.​    O superusuário não precisa usar o comando sudo por já ter todas as permissões de forma padrão e pré-configuradas no arquivo sudoers. É neste arquivo, localizado em /etc/, que a configuração do comando sudo é dada. Ou seja, é nele que é dado ao grupo sudo a capacidade de executar qualquer comando, assim como também é dado o privilégio do usuário root.Basicamente, um novo usuário não poderá usar sudo até que seja adicionado ao grupo sudo, que já está configurado no arquivo sudoers por padrão.      Sabendo disso, podemos mostrar que para usar qualquer comando com privilégio basta digitar  sudo su  lembrando que o “su” sozinho reconhece como uma troca para o superusuário, mas para isso precisa ter privilégios de superusuário, que é garantido pelo “sudo”. Assim você troca pro superusuário com apenas a sua senha. Será melhor explicado abaixo:O comando sudo, como vimos, nos permite usar privilégios de outros usuários. Para isso é necessário estar dentro do grupo de usuários chamado sudo.Na primeira vez que digitamos o comando na sessão é necessário digitar a senha do usuário para confirmar que quer usar comando de privilégio mesmo, pois estamos pegando emprestado o privilégio de root para que possamos fazer um comando como se fossemos ele. Então, sudo nos permite fazer tudo que um root faz só que usando a própria senha, sem precisar saber a senha do root em si. O comando su, sem especificação de usuário, entende que o usuário ‘especificado’ é o próprio root, e por isso pede a senha do mesmo.  Se você pode usar o comando sudo para executar qualquer comando de superusuário com a sua senha, logo você poderá usar o comando para entrar como root usando a sua senha. Por isso a junção sudo su  entra no root pela senha do seu usuário, tal qual entraria em outro usuário com a senha do atual, como por exemplo o sudo su banana. Por isso é possível adicionar e mudar a senha do root sendo pedido apenas a senha do seu usuário (“sudo passwd root”). Em outras palavras, quem está no grupo sudo também é um root, a diferença é que o root fica com esse privilégio direto, um usuário normal no grupo sudo só tem esse privilégio ao usar o comando, o que acaba sendo um pouco mais seguro, já que ter privilégios elevados também indica que você tem o poder de rodar comandos que podem eventualmente quebrar o sistema ou aplicação de algum modo, se é necessário desbloquear como sudo então você vai saber o que está fazendo (é o que se espera) e ficará por sua própria conta e risco.Comandos de sistemaAdvanced Packaging Tool  (apt)Em sistemas baseados em Debian, como Ubuntu, utilizam o apt como gerenciador de pacote como padrão.  comando antigo: apt-get; foi abreviado para somente apt, ainda podendo utilizar os dois)Existem outros gerenciadores de pacotes também, como o dnf / yum que é usado no Fedora.; o pacman no Arch; apk no Alpine, etc. Mas não abordaremos outros gerenciadores por aqui. Normalmente seguem um padrão parecido, mas fique ligado na documentação da sua distro e saiba dos comandos apropriados para ela.  Os comandos podem pedir privilégio, então deve-se usar junto do comando sudo .Instalar e reinstalar  programasapt install &lt; nome do programa &gt;apt reinstall &lt; nome do programa &gt;  também pode reinstalar fazendo um purge no programa e instalar dnv, o comando para isso será mostrado em breve​  - Extra:Seu sistema tendo suporte a flatpak, snap,ou outros pacotes ‘universais’ do mundo linux, sua gama de apps podem aumentar e ter, assim, novas formas de instalar programas tbm, podendo ser usado por interface gráfica (ou pela distro, ou por sites doss catálogos; como snapd e flathub) ou pelos comandos;sudo snap install &lt; nomedoprograma &gt;sudo flatpak install &lt; nomedoprograma &gt;Podemos instalar o flatpak e snap pelos comandossudo apt install snapdsudo apt install flatpak  pacotes snaps e flatpaks são universais para serem usados em qualquer distribuição linux, eles vem com as suas dependências juntas e compactadas em um único pacote; também temos os arquivos AppImage com a finalidade de compatibilidade geral dos programas para diferentes plataformas LinuxCaso precise adicionar o repositório do flatpak:sudo add-apt-repository ppa:alexlarsson/flatpak  O comando add-apt-repository ppa: é para adicionar o repositório de um programa para que ele seja add ao sistema, assim você pode instalar e atualizar este programa. Sempre depois de add um PPA faça um update, que veremos no próximo bloco;Atualizar sistemaapt update(Baixar pacotes)​   seguindo deapt upgrade(Instalar os pacotes) ;apt full-upgradeouapt dist-upgrade(instalando os pacotes baixados e desinstalando outros pacotes se necessário para concluir certas instalações)Para mudar de release, nova versão do seu sistema - como do ubuntu 19.10 pro 20, deve rodar este comando após o upgrade:apt do-release-upgradeEm caso de alguns erros, o comando dpkg, que é de gerenciamento de pacote, pode te ajudar:sudo dpkg --configure -aRemoção  Remover programas; antigas dependências; etcapt purge &lt; nome &gt;remover programa junto com os arquivos de configuração ou dados do pacote.                                  (Não removerá os arquivos de configuração caso esteja dentro da pasta inicial / home do usuário)apt remove &lt; nome &gt;  remover um programa sem mexer nos arquivos de configuração ou dados do pacote.apt autoremoveremover pacotes que não são necessários; muitos pacotes são instalados como dependência para outros e que depois deixam de ser úteis.VerificaçãoGerar relatório sobre o total de pacotes disponíveis : apt-cache statsPara verificar dependências quebradas : apt-get check &lt; nome &gt;Para procurar por programas : apt search &lt; nome &gt;Ver detalhes do pacote : apt show &lt; nome &gt;Listar pacotes : apt list &lt; nome &gt;   Listar pacotes com certa nomenclatura  ou todos os pacotes deixando em branco      Outras funcionalidades  shutdown -&gt; desligar o pc  [ podendo usar para programar o desligamento em segundos: shutdown -t 9800 (tempo em segundo) e dps -c para cancelar ]reboot -&gt; reiniciar o pckill -&gt; matar algum processo / fechar algum programamount -&gt; montar algum dispositivo como HDping -&gt; Enviar pacotes para um serviço; pingando um site para testar a conexão vendo o tempo de resposta e IP, por exemplo.      Informação  date -&gt; data e horapwd -&gt; diretório atualuname -&gt;  informação geral e kernelifconfig -&gt;  interface de redewhoami -&gt; usuário atualroute -&gt; tabela de roteamento (IP Routing tables)free -h -&gt; ver uso de memóriaarch -&gt; arquitetura da CPUps -&gt; listar processos em execuçãotop -&gt; listar esses processos e uso de hardware (resumo)nohup -&gt; ignorar sinais de interrupção; rodar comando em segundo plano mesmo no logoutvmstat -&gt; tabela de status da memória virtual do sistemafree -&gt; Uso de memória ram [-h mostra em mega ou em giga]lscpu -&gt; Descobrir informações sobre a CPUlshw -&gt; listar hardwaresUtilidades no terminal  Manual de comandos, histórico e limpezaman &lt;comando&gt;  ex: man bashapropos &lt;algo&gt; -&gt; (pesquisar algo no manual do sistema)history -&gt; histórico dos últimos comandos usadosclear / {Ctrl + L} -&gt; limpar a tela do terminal  Listagem de conteúdos do diretóriols -&gt; comando de listagemls -a : para tbm os itens ocultosls -l : para mais informações de cada arquivo, como as informações de permissões    ls -la : listar tudo com informaçõestree -&gt; listar em formato árvore  Caminhando entre pastas/diretóriosComando: cd  =  change directoryExemplos;cd /    = ir para a raiz do sistemacd /etc = ir para a pasta etccd ..   = voltar uma pasta, voltando pra raizcd ~    = indo pra home do seu usuárioetc  Aviso: Pode não funcionar da melhor maneira dentro de scripts de shell  WSL: Para quem usa o terminal no w10 - poder ser bacana trabalhar dentro da pasta que você também usa direto pelo windows, como o seu desktop. Pra isso pode usar cd /mnt/c/users/username/desktop mudando o ‘username’ pelo seu usuário.  Leitura e exibição de arquivosless - ler arquivos com paginação (podendo avançar e retroceder) e salvar saída desejada;less &lt;nome_do_arquivo&gt;more - ler arquivosmore &lt;nome_do_arquivo&gt;cat - mostrar conteúdo do arquivocat &lt;nome_do_arquivo&gt;  Criando  arquivostouch - criar arquivo em brancotouch nome_do_arquivo  nano - editor de texto padrão (serve para programação)nano nome_do_arquivo (nome do arquivo que quer editar ou criar)echo - Apresentar um texto. Podemos criar um arquivo com escrita dentro (também pode ser usado pra add uma escrita em um arquivo existente, ou alterar todo o texto do arquivo)echo mensagem &gt; nome_do_arquivo  Criando pastas e removendo pastasmkdir (make directory) -&gt; criar pasta  / diretóriomkdir &lt;nome_da_pasta&gt;rmdir (remove directory) -&gt; remover APENAS diretórios vaziosrmdir &lt;nome_da_pasta&gt;rm -d (remove) -&gt; diretórios vaziosrm -rf -&gt; diretórios cheiosrm -rf &lt;nome_da_pasta&gt;.Para remover um arquivo com que inicie o nome com -rm ./-&lt;nome&gt;rm -- -&lt;nome&gt; nota: Aqui teve mais aprofundamento do comando rm, mas também será falado nos comandos de manipulação de arquivo  Criando atalhos/linksln -&gt; fazer link entre arquivos - Criar atalhosln &lt;nome_do_arquivo&gt; &lt;nome_do_atalho&gt;---------------------------------------------exemplo prático:echo a &gt; a.txt          ln a.txt atalho.txt     cat atalho.txt a---------------------------------------------  Localizar programas, comandos e arquivoslocate - localizar arquivoslocate &lt;nome&gt;which - localizar um comando - diretóriowhich &lt;comando&gt;whereis - localizar arquivos binários, o seu código-fonte e a página de manualwhereis &lt;arquivo/comando&gt;  find - procurar arquivos de um diretório ou até um específico find /home/nomedeusuario/Documentos -&gt; listando todos os arquivos de docs find / -name nome.txt -&gt; achar o caminho exato do arquivo tal (precisa saber o nome e a extensão certa para achar o arquivo e mostrar o diretório correto) o / é para procurar em toda a raíz, podendo colocar um diretório específico o -name é para especificar que vai procurar pelo nome que será escrito logo depois.Pode ser usado com filtros para uma saída melhor e achar algum arquivo específico sem saber ao certo a extensão ou apenas sabendo a extensão e não o próprio nome (veremos logo a frente)  Manipulando arquivosrm (remove) -&gt; remover arquivos e diretóriosrm &lt;nome-do-arquivo&gt;mv (move) -&gt; mover ou renomear arquivosmv &lt;arquivo&gt; &lt;novo_lugar&gt; mv &lt;arquivo&gt; &lt;novo_nome&gt;cp (copy/copia) -&gt; copiar arquivocp &lt;arquivo&gt; &lt;novo_lugar&gt;file -&gt; informação do arquivofile &lt;arquivo&gt;rename -&gt; renomear arquivorename &lt;arquivo&gt; &lt;novo_nome&gt;tar - zip - 7za - rar - bz2 - gzip .. -&gt; compactar e descompactar arquivos(pro rar: sudo apt-get install rar unrar)    Compactar arquivos:    7za a arquivo.7z pasta-arquivos_compactar (caso tenha o 7z instalado)    tar -zcf nome_arq.tar nome_do_diretrio__do_arquivo_ou_dos_arquivos    Pode compactar em tar.gz agora, dps do tar: gzip -9 nomedessearquivo.tar    Ou até em tar.bz2 com: bzip2 nome_arq.tar    Compactar direto em tar.gz:  tar -cz arquivo &gt; novonome.tar.gz    tar -cz Pasta &gt; arquivo.tar.gz (pasta inteira)    Mesmo comando tbm serve para bz2: tar -cz arquivo &gt; nome.tar.bz2    gzip document.txt    gzip -c document.txt&gt; new_name.gz    bzip2 document.txt    bzip2 -c document.txt&gt; name.bz2    rar a compactada.rar pasta/    rar a compactada.rar pasta/ -p senha    zip nome.zip arquivo    xz arquivodesejado (para .xz)    tar -cz Pasta/Arquivo &gt; arquivo.tar.xz    Descompactar arquivos:    7za e arquivo.7z ;    unzip arquivo.zip ;    unrar x nomedoarquivo.rar ;    unxz  arquivo.xz  (unxz is equivalent to xz –decompress);    unzip arquivo.zip linux64/* -d /pasta/ ;    tar -xvf nomedoarquivo.tar ;    tar -vzxf nomedoarquivo.tar.gz ;    bunzip nomedoarquivo.bz2 ;    tar -jxvf nomedoarquivo.tar.bz2 ;    gzip -d pacote.tar.gz ;    bunzip2 pacote.tar.bz2 ;    tar -xz Pasta &lt; Arquivo.tar.gz    tar -vxf Backup.tar.gz    gunzip documento.gz    tar -xjvf arquivo.tar.bz2 -C /pasta/    tar -xvf arquivo.tar.xz    uncompress arquivo.Zdpkg - rpm -&gt; gerenciador de pacotes de softwarechmod -&gt; privilégio de arquivochmod +x &lt;arquivo&gt;stat - fornecer status/informações sobre arquivos e diretóriossource - executar um arquivo no shell    O comando source é um comando interno do shell sendo usado. Para saber mais sobre ele podemos usar o help =&gt; help source  Comparar arquivosdiff - \"differ\" - Compara diretórios e arquivos linha por linhadiff &lt;nome_do_arquivo_1&gt; &lt;nome_do_arquivo_2&gt;diff &lt;nome_da_pasta_1&gt; &lt;nome_da_pasta_2&gt;A saída da comparação dos arquivos pode parecer confusa. Podemos melhorar o comando pra saídas que queremos pra cada situação.diff -n (saida normal) ; diff -s (reportar qnd os arquivos são os mesmos) ; diff -q (reportar qnd os arquivos forem diferentes) ; diff -y (comparação em duas colunas) ; etccmp - \"compare\" - Comparar arquivos - ver se dois arquivos são iguais (em caso de diferença, não sairá nenhum resultado)sdiff - comparar dois arquivos e tabelar com informações    Se as linhas forem idênticas, são mostradas em cada lado da tabela, separadas apenas por espaços.    Se uma linha existe apenas no primeiro arquivo, um sinal &lt; é mostrado no final da linha da tabela.Trabalhando melhor com terminaldominando o terminal com atalhos, múltiplos comandos, separadores, filtros, etc.Comandos simultâneos:    aprendendo a usar separadores, sequências de comandos e atributos especiaisPodemos fazer mais de um comando em uma mesma linha, como por exemplo colocar a atualização do sistema (o apt update e upgrade) para funcionarem automaticamente escrevendo apenas uma linha: sudo apt update &amp;&amp; sudo apt upgradeExplicarei resumidamente a funcionalidade das caracteres especiais  &amp;&amp; ,  ; ,  &amp; ,  || ,   | ,  elas podem se mostrar úteis para determinadas situações. Estas não possuem o mesmo significado.O &amp;&amp; significa um “and” (e), funciona de forma a executar o segundo comando apenas, e somente apenas, se o primeiro der um status existente de 0 (sucesso de execução). Em outras palavras, serve para chamar um comando caso o outro não retorne erro, assim o bash emite um sinal de 0 e o operador &amp;&amp; chama o próximo comando. Para funcionar em script, as duas precisam ser verdadeiras, como { 1&gt;0 &amp;&amp; 0==0 } para que os comandos dentro deste if sejam utilizados.Já o &amp; Executa o segundo comando independentemente do resultado do comando anterior. Porém, a sua principal função é executar o comando posterior a ele em background em uma subshell e não esperar o comando finalizar, sempre retornando um status 0 (por isso um cd antes do &amp; não funciona direito). Sendo assim, pode ser usado no final de um comando, o que significa que você quer executar aquele comando e já liberar o terminal para outros, sem aguardar o resultado do último.O ; significa o fim da linha do tal comando, como um delimitador, fazendo o bash pular pro próximo - como comandos independentes - funcionando de forma a ser indiferente se algum está dando erro ou não. Acaba sendo mais usado para os scripts.O ||  significa um “or” (ou) e também depende do resultado do último comando, assim como o &amp;&amp; ele também é um operador de comparação. Em outras palavras, eles servem para testar se duas ou mais expressões são verdadeiras ou não. Mas o || Funciona de forma a usar um comando mesmo em caso de que um dê erro, ou seja, retorna verdadeiro se pelo menos UMA das expressões fornecidas for verdadeira, diferentemente do &amp;&amp; que necessita que as suas sejam verdadeiras.Já o pipe (|) acaba sendo usada mais para filtros que tornam os comandos mais práticos. A sua função nada mais é que fazer uma comunicação entre processos. A exibição de um comando vai variar dependendo do comando dado após o pipe, como um filtro. Se eu estiver nos “meus documentos” e botar um ls, mostrará tudo que tem lá. Se eu só quiser a listagem de arquivos que tenham “aula” no nome, colocaria ls | grep aula e pronto! listou apenas os arquivos e documentos que tinham aula no nome. Ou seja, jogou a saída do primeiro comando pro segundo para executar este segundo em cima da saída do anterior, e por aí vai.Outro exemplo prático (da net): ls | grep b | sort -r | tee arquivo.out | wc -l      O comando “ls”, como bem sabemos, lista o conteúdo do diretório, porém devido ao pipe ele não envia o resultado para tela e sim ao comando “grep b”.        O comando “grep b” por sua vez filtra os nomes de arquivos que contém a letra “b”. Devido ao segundo pipe a saída do comando “grep b” é enviada para “sort -r”, que classifica os nomes em ordem crescente.        A saída do “sort -r “ é então passada para o comando “tee”, que divide os dados em dois, como se fosse uma conexão em t, fazendo com que as informações processadas pelo comando “sort -r” sejam escritas no arquivo “arquivo.out”.        Então o comando “wc -l” conta as linhas do arquivo “arquivo.out”. Assim obtemos como resultado a quantidade de arquivos que contém a letra “b” impresso na tela e o nome desses arquivos em “arquivo.out”.  Recapitulando em resumo básico&gt;pipe '|' -&gt; tem a função de redirecionar a saída de dados de um comando. Acabada, então, sendo muito utilizado para rodar algum comando de complemento e/ou filtragem de saída.; -&gt; delimitar / marcar o final da linha&amp; -&gt; chamar próximo comando&amp;&amp; -&gt; *E (and)* -&gt; chamar o próximo comando apenas após a execução do primeiro e se for necessariamente verdadeira (comando bem sucedido)|| -&gt; *OU (or)* -&gt; Operador de comparação (tal qual &amp;&amp;), retorna verdadeiro se pelo menos uma das expressões fornecidas for verdadeiraComandos de filtragem e manipulação de textoaprendendo a usar comandos de filtragem e manipulação para um domínio de terminal, organização e escolha de saída para poupar tempoPrimeiramente falaremos do comando de filtragem GREP pois já mostramos ele antes, mas vale mais uma explicação e seu manual. A função dele é procurar por trechos de texto (strings) dentro de diretórios e arquivos, retornando para você em quais arquivos a string foi encontrada.Podemos usar o comando find (procurar) com ele e especificar o nome do arquivo ou a sua extensão.find /home/matheus | grep exemplo   -&gt; achar o arquivo com nome exemplo (qualquer extensão) find /home/matheus/Documentos | grep .psd  -&gt; achar arquivos com psd, podendo ser a própria extensão (qualquer nome com asp ou com extensão psd será mostrada)   - em casos de extensão comum, mais prático usar o grep com o nome do arquivo somenteAgora estamos filtrando toda a saída do find para mostrar só o que tem algo que está especificado com o grep.Estamos vendo agora, nessa parte complementar, a maior parte dos comandos que eu chamo de utilitários. É onde realmente começa esse tópico de filtragens.Será mostrado o comando, o que ele faz, como usar e uma exemplificação - tudo seguindo o próprio manual, fontes de resumo da net e de meus próprios testes em alguns complementos.É importante frisar que alguns dos comandos podem já terem sido comentados anteriormente também. Inclusive,como já dito, começaremos pelo próprio grepgrepUso:grep [OPÇÃO]… PADRÃO [ARQUIVO]…Busca por PADRÃO em cada ARQUIVO.Exemplo: grep -i “olá, mundo” menu.h main.cSeleção e interpretação de padrão:  -E, --extended-regexp     PADRÃO é uma expressão regular estendida  -F, --fixed-strings       PADRÃO são textos separados por nova linha  -G, --basic-regexp        PADRÃO é uma expressão regular básica (por padrão)  -P, --perl-regexp         PADRÃO é uma expressão regular de sintaxe Perl  -e, --regexp=PADRÃO       usa PADRÃO como uma expressão regular  -f, --file=ARQUIVO        obtém PADRÃO do ARQUIVO  -i, --ignore-case         ignora diferenças entre maiúsculas/minúsculas  -w, --word-regexp         força PADRÃO a coincidir só com palavras inteiras  -x, --line-regexp         força PADRÃO a coincidir só com linhas inteiras  -z, --null-data           uma linha de dados termina com byte 0, e não com                          caractere de nova linhaMiscelânea:  -s, --no-messages         suprime mensagens de erro  -v, --invert-match        seleciona somente linhas não coincidentes  -V, --version             mostra informações sobre versão e sai      --help                exibe esta ajuda e saiControle de saída:  -m, --max-count=NÚM       interrompe depois de NÚM ocorrências  -b, --byte-offset         emite a posição em bytes nas linhas de saída  -n, --line-number         emite o número da linha nas linhas de saída      --line-buffered       libera a saída a cada linha  -H, --with-filename       emite o nome do arquivo nas linhas de saída  -h, --no-filename         inibe o nome de arquivo na saída      --label=RÓTULO        usa RÓTULO como nome de arquivo para entrada padrão  -o, --only-matching       mostra apenas a parte da linha que coincide com                              o PADRÃO  -q, --quiet, --silent     inibe todas as mensagens normais de saída      --binary-files=TIPO   assume que arquivos binários são TIPO                             TIPO pode ser \\\"binary\\\" (binário), \\\"text\\\" (texto),                             ou \\\"without-match\\\" (nunca coincide)  -a, --text                equivalente a --binary-files=text  -I                        equivalente a --binary-files=without-match  -d, --directories=AÇÃO    como tratar diretórios;                             AÇÃO pode ser \\\"read\\\" (ler), \\\"recurse\\\" (recursivo),                             ou \\\"skip\\\" (ignorar)  -D, --devices=AÇÃO        como tratar dispositivos, FIFOs e soquetes;                             AÇÃO pode ser \\\"read\\\" (ler) ou \\\"skip\\\" (ignorar)  -r, --recursive           equivalente a --directories=recurse  -R, --dereference-recursive  similar, mas segue todas as ligações simbólicas      --include=PADRÃO_ARQ  busca apenas em arquivos que casam com PADRÃO_ARQ      --exclude=PADRÃO_ARQ  ignora arquivos e diretórios que casam com                              PADRÃO_ARQ      --exclude-from=ARQUI  ignora arquivos que casam com algum padrão escrito                              em ARQUIvo      --exclude-dir=PADRÃO  diretórios que casam com PADRÃO serão ignorados  -L, --files-without-match emite apenas os nomes dos ARQUIVOs sem linhas                              selecionadas  -l, --files-with-matches  emite apenas os nomes dos ARQUIVOs com linhas                              selecionadas  -c, --count               emite apenas a contagem de linhas selecionadas                              por ARQUIVO  -T, --initial-tab         alinha por tabulação (se necessário)  -Z, --null                emite byte 0 depois do nome do ARQUIVOControle de contexto:  -B, --before-context=NÚM  emite NÚM linhas de contexto anteriores  -A, --after-context=NÚM   emite NÚM linhas de contexto posteriores  -C, --context=NÚM         emite NÚM linhas de contexto de saída  -NÚM                      o mesmo que --context=NÚM      --color[=QUANDO],      --colour[=QUANDO]     usa marcadores para destacar os textos coincidentes;                              QUANDO pode ser \"always\" (sempre), \"never\"                              (nunca) ou \"auto\" (automático).  -U, --binary              não exclui caracteres CR no fim de linha (MSDOS/Windows)Quando ARQUIVO é “-“, lê da entrada padrão. Se o ARQUIVO não é informado, lê “.”se recursivo, senão lê “-“. Se há menos que dois ARQUIVOs, assume-se -h.O estado de saída é 0 se alguma linha é selecionada; 1 em caso contrário;se ocorrer algum erro e -q não é especificado, o estado de saída é 2.tailUso:tail [OPÇÃO]… [ARQUIVO]…Mostra as 10 últimas linhas de cada ARQUIVO na saída padrão.Se especificados vários ARQUIVOs, mostra o nome de cada um antes de suasrespectivas linhas.Se ARQUIVO não for especificado ou for -, lê a entrada padrão.Argumentos obrigatórios para opções longas também o são para opções curtas.  -c, --bytes=[+]NÚM       emite os últimos NÚM bytes; ou usa -c +NÚM para                             emitir iniciando com byte NÚM de cada arquivo  -f, --follow[={name|descriptor}]                           emite os dados anexados ao arquivo à medida que ele                             cresce; na ausência de argumento, usa \"descriptor\"  -F                       o mesmo que --follow=name --retry  -n, --lines=[+]NÚM       emite as últimas NÚM linhas, em vez das 10 últimas;                             ou use -n +NÚM para emitir linhas a partir de NÚM      --max-unchanged-stats=N                           com --follow=name, reabre o ARQUIVO que não teve o                             tamanho alterado após N (padrão: 5) iterações                             para ver se ele foi removido ou renomeado                             (uma situação comum para arquivos de log rotativo);                             com inotify, essa opção raramente é útil      --pid=PID            com -f, termina depois do processo de PID morrer  -q, --quiet, --silent    nunca emite cabeçalhos com os nomes dos ARQUIVOs      --retry              continua tentando abrir um arquivo, se inacessível  -s, --sleep-interval=N   com -f, suspende por aproximadamente N segundos                             (padrão: 1.0) entre as iterações; com inotify                             e --pid=P, verifica o processo P pelo menos uma                             vez a cada N segundos  -v, --verbose            sempre emite cabeçalhos com os nomes dos ARQUIVOs  -z, --zero-terminated     delimitador de é NULO, e não com nova linha      --help     mostra esta ajuda e sai      --version  informa a versão e saiNÚM pode ter um sufixo multiplicador:b 512, kB 1000, K 1024, MB 10001000, M 10241024,GB 100010001000, G 102410241024, e assim por diante com T, P, E, Z, Y.Com –follow (-f), tail segue o descritor de arquivo, o que significa quemesmo se um arquivo for renomeado durante rastreamento do tail, ele vaicontinuar a rastreá-lo. Este comportamento padrão não é desejável quandovocê quer rastrear pelo nome verdadeiro do arquivo, e não o descritor dearquivo (por exemplo, a rotação de um log). Use –follow=name nesse caso.Isso faz com que tail rastreie o arquivo reabrindo-o periodicamente paraver se ele foi removido e recriado por algum outro programa.exemplos: tail -5 /etc/mtools.conf ;tail -2 /home/matheus/Documentos/exemplo.txt ;teeUso:tee arquivo.txttee exibe a saída de um programa e escreve-a em um arquivo, simultaneamente.Sintaxe: tee [opções] arquivo    -a :: concatena o arquivo em vez de sobrescrevê-lo    -i :: ignora interrupções             exemplo de uso:  ls      tee exemplo.txt      grep ‘teste’      Listou os diretórios e arquivos do local, gravou a saída em ‘Do’ e pediu para filtrar esse arquivo mostrando apenas a string ‘Do’.Saída:$&gt;ls | tee exemplo.txt | grep 'Do'DocumentosDownloads------$&gt;ls'Área de Trabalho'   Downloads     Imagens   npm-debug.log   snap        Vídeos Documentos          **exemplo.txt**   Música    Público         Templates$&gt;cat exemplo.txt    Área de Trabalho    Documentos    Downloads    Imagens    Música    npm-debug.log    Público    snap    Templates    VídeosDiffdiff exibe, na tela, as diferenças entre dois arquivos texto ou todos os arquivos com o mesmo nome, em dois diretórios.Sintaxe: diff [opções] arquivo1 arquivo2    -a :: considera todos os arquivos do tipo texto    -b :: ignora sequências de espaços e caracteres de tabulação    -d :: tenta localizar um conjunto menor de modificações (isso torna o diff mais lento)    -i :: não distingue maiúsculas de minúsculas    -r :: processa também os subdiretórios, quando diretórios são comparados    -s :: informa quando dois arquivos são na verdade o mesmo arquivo    -N :: trata arquivos ausentes como vazios Exemplo (exibe as diferenças entre os arquivos “spc1.txt” e “spc2.txt”):diff -f /operftp/tmp1/spc1.txt /operftp/tmp2/spc2.txtxargsxargs constrói e executa comandos a partir da entrada padrão.Sintaxe: xargs [opções] comando [argumentos]    -p :: modo interativo, pede confirmação antes de executar cada linha de comando    -t :: modo detalhado, exibe a linha de comando na tela antes de executá-la Exemplo:find / -empty | xargs ls -l | lesscatUso:$ cat [opções] arquivoQuando as opções aparecem entre chaves, elas são opcionais mesmo.O comando cat concatena arquivos, imprime seu conteúdo de tela e ainda pode receber texto digitado pelo teclado para um arquivo.Vejamos como criar um arquivo com apenas algumas linhas de texto:$ cat &gt; teste.txtAgora você pode digitar qualquer texto. Quando terminar, pressione Ctrl d em uma linha vazia para finalizar a entrada de dados e salvar o arquivo teste.txt.Para ver o conteúdo do arquivo recém-criado:$ cat teste.txtO cat também pode servir para concatenar arquivos.$ cat texto1.txt &gt; texto.txtObserve que neste exemplo o conteúdo do arquivo texto.txt é substituído pelo texto1.txt.Para adicionar o conteúdo do texto1.txt no final arquivo texto.txt o correto seria:$ cat texto1.txt &gt;&gt; texto.txtcutUso:$ cut opções arquivoO comando cut traduzido ao pé da letra significa cortar. Ele lê o conteúdo de um ou mais arquivos e tem como saída uma coluna vertical.Suas opções mais frequentes são:-b número: Imprime uma lista vertical com o byte número (da esquerda para direita);-c número: Imprime uma lista vertical com o caractere número (da esquerda para direita);-d delimitador: Configura o delimitador que separa uma coluna da outra. O padrão é o Tab;-f número: Imprime a coluna número.Exemplos:$ cut –d : -f 1 /etc/passwd$ cut –b 1 /etc/passwd$ cat /etc/hosts | cut –f 2expandUso:$ expand [opções] arquivoO comando expand troca o Tab (tabulação) dentro dos textos para o número de espaços correspondentes. É útil para tornar um texto que faz uso das tabulações mais atrativas para determinados dispositivos, como vídeo, impressora, arquivos, etc.As opções frequentemente utilizadas são:-t número: Especifica o número de espaços que o tab contém. O padrão é 8;-i: Converte somente no início das linhas.Exemplo:$ expand LEIAME.TXTunexpandUso:$ unexpand [opções] arquivoO comando unexpand troca o espaço simples por TAB (tabulação) dentro dos textos, no início das linhas. É o inverso do comando expand.As opções frequentemente utilizadas são:-t número: Especifica o número de espaços que o tab contém. O padrão é 8;-a: Converte todos os espaços ao invés dos espaços no início das linhas.Exemplo:$ unexpand LEIAME.TXTfmtUso:$ fmt [opções]O comando fmt (format) formata um texto com uma largura específica. Ele pode remover espaços ou adicionar espaços conforme a largura desejada. O padrão são 75 caracteres.A opção frequentemente utilizada é:-w número: Configura a largura desejada para o texto.Exemplo:$ fmt –w 50 LEIAME.TXTheadUso:$ head [opções]O comando head (cabeçalho) mostra as primeiras 10 linhas do início do texto.A opção frequentemente utilizada é:-n número: Configura o número de linhas que o head irá mostrar.Exemplo:$ head –n 50 LEIAME.TXTJoinUso:$ join [opções] arquivo1 arquivo2O comando join (juntar) une as linhas de ambos os arquivos que tenham um índice comum. O comando join poderá ser utilizado como um banco de dados simples.As opções frequentemente utilizadas são:-j1 número: Escolhe o campo número como índice para o arquivo1.-j2 número: Escolhe o campo número como índice para o arquivo2.-j número: Escolhe o campo número como índice para ambos os arquivos.Exemplo:Suponha que o primeiro arquivo contenha o seguinte conteúdo:1      SXY-24692      KOE-26083      OIE-3645E o segundo arquivo tenha o seguinte conteúdo:1      Monza2      Audi A33      Fiat Uno Mille SmartDepois do comando:$ join –j 1 arquivo1 arquivo2A saída será a seguinte:1      SXY-2469 Monza2      KOE-2608 Audi A33      OIE-3645 Fiat Uno Mille SmartTABELA 5 – Símbolos para diferenciar cabeçalho e rodapéSímbolo    Descrição:::    Símbolo utilizado para iniciar o cabeçalho do texto::    Símbolo utilizado para iniciar o corpo  do texto:    Símbolo utilizado para iniciar o rodapé  do textoVeja que o comando join necessita que ambos os arquivos contenham um índice, como no exemplo.nlUso:$ nl [opções] [arquivo]O comando nl (numerar linhas) é utilizado para numerar as linhas de um arquivo. O comando considera condições especiais para o cabeçalho e o rodapé do arquivo.As opções frequentemente utilizadas são:-h subopção: Utilizada para formatar o cabeçalho do texto. O padrão é não numerar o cabeçalho;-b subopção: Utilizada para formatar o corpo do texto. O padrão é numerar somente as linhas não vazias;-f subopção: Utilizada para formatar o rodapé do texto. O padrão é não numerar o rodapé.As subopções são:A: Numerar todas as linhas;t: Numerar somente as preenchidas;n: Não numerar as linhas.Exemplo:Suponha que o arquivo.txt tenha o seguinte conteúdo:\\:\\:\\:Relatório de Notas e Frequência dos alunos de Engenharia de Software——————————————————————————————————————————————————————————————————Nome               Nota          Freq.         Resultado——————————————————————————————————————————————————————————————————\\:\\:Carlos Torres          8,5           80%               AprovadoJosé Antônio          10,0           100%                AprovadoMaria de Lourdes      10,0              100%               AprovadoMário Cabral           9,5           100%                Aprovado\\:——————————————————————————————————————————————————————————————————E usarmos o comando nl:$ nl arquivo.txtO resultado será:     Relatório de Notas e Frequência dos alunos de Engenharia de Software       ——————————————————————————————————————————————————————————————————            Nome           Nota          Freq.         Resultado       ——————————————————————————————————————————————————————————————————         1    Carlos Torres       8,5            80%             Aprovado         2    José Antônio        10,0           100%             Aprovado         4    Maria de Lourdes    10,0           100%             Aprovado         5    Mário Cabral         9,5           100%             Aprovado        ——————————————————————————————————————————————————————————————————odUso:$ od [opções] [arquivo]O comando od (Octal e Demais formatos) é utilizado para visualizarmos o conteúdo de um arquivo nos formatos hexadecimal, octal, ASCII e nome dos caracteres.A opção frequentemente utilizada é:-t tipo: Especifica o tipo de saída que o comando od deve gerar.Os tipos possíveis são:a: Nome do caractere;c: ASCII;o: Octal;x: Hexadecimal.Exemplo:$ cat &gt; arquivo.txtCertificação LinuxCtrl d$ od –t x arquivo.txt0000000 74726543 63696669 6fe3e761 6e694c200000020 000078750000022pasteUso:$ paste [opções] arquivo1 arquivo2O comando paste (colar) é utilizado para concatenar as linhas de diversos arquivos em colunas verticais.As opções frequentemente utilizadas são:-d’s’: Separa as colunas com o símbolo s dentro das aspas simples;-s: concatena todo o conteúdo de um arquivo com uma linha para cada arquivo.Exemplo:Suponha que o arquivo1 tenha o seguinte conteúdo:ntkonohalsilveiraralencarE o arquivo2 tenha o seguinte conteúdo:provedor.com.broutroprovedor.com.brprovedorEZ.com.brAo utilizarmos o comando paste, o resultado será o seguinte:$ paste –d’@’ arquivo1 arquivo2ntkonoha@provedor.com.brlsilveira@outroprovedor.com.brralencar@provedorEZ.com.brprUso:$ pr [opções] arquivoO comando pr (printing) formata um arquivo texto para uma saída paginada com cabeçalho, margens e largura definidos. É útil para formatar textos crus para impressão. O cabeçalho consiste em data, hora, nome do arquivo e número da página.As opções frequentemente utilizadas são:-d: Especifica espaçamento duplo;-l número: Especifica o número de caracteres de largura da página. O padrão são 66 caracteres;-o número: Especifica o número de espaços da margem esquerda.Exemplo:$ pr –l 75 –o 5 arquivo.txtsplitUso:$ split [opções] arquivo_entrada arquivo_saidaO comando split (dividir) é usado para dividir grandes arquivos em n-arquivos menores. Os arquivos de saída são gerados de acordo com o número de linhas do arquivo de entrada.O padrão é dividir o arquivo a cada 1000 linhas. Os nomes dos arquivos de saída seguem o padrão arquivosaidaaa arquivosaidaab arquivosaidaac, assim por diante.A opção mais frequente é:-n: Onde n é o número de linhas que irão dividir o arquivo de entrada.Exemplo:$ split -20 arquivo1.txt arquivosaida.txttailUso:$ tail [opções] arquivoO comando tail (cauda) visualiza as últimas 10 linhas de um arquivo. Funciona como o oposto do comando head.As opções mais frequentes são:-n número: Especifica o número de linhas finais que o tail irá mostrar de um arquivo;-f: Mostra as últimas linhas finais de um arquivo continuamente enquanto outro processo grava mais linhas. Muito útil para visualizarmos arquivos de LOG.Exemplo:$ tail –n 50 /var/log/messages$ tail –f /var/log/messagenstrUso:$ tr [opções] variável_busca variável_trocaO comando tr faz a troca de uma variável por outra especificada. Este comando não trabalha diretamente com arquivos, portanto deve ser utilizado com a saída padrão de outro comando.As opções mais frequentes são:-d: Apaga as ocorrências da variável de busca;-s: Suprime as ocorrências repetidas da variável de busca.Exemplo:$ cat arquivo1 | tr a-z A-ZNeste exemplo o comando tr troca todas as letras de a a z para maiúsculas.$ cat arquivo1 | tr –d aNeste exemplo o comando tr apaga a letra a.$ cat arquivo1 | tr –s 1Neste exemplo o comando tr suprime as ocorrências repetidas do número 1.O comando tr pode fazer a troca de caracteres da variável de busca pela variável de troca, mas o número de caracteres precisa ser o mesmo em ambas.wcUso:$ wc [opções] [arquivos]O comando wc conta as linhas, palavras e caracteres de um ou mais arquivos. Se mais de um arquivo for passado como argumento, ele irá apresentar as estatísticas de cada arquivo e também o total.As opções mais frequentes são:-c: Conta o número de caracteres de um ou mais arquivos;-l: Conta o número de linhas de um ou mais arquivos;-L: Conta o número de caracteres da maior linha do arquivo;-w: Conta as palavras de um ou mais arquivos.Exemplo:$ wc LEIAME.TXTsortUso:$ sort [-b] [-d] [-f] [-i] [-m] [-M] [-n] [-r] [-u] arquivo [-o arquivo_ saída]O comando sort ordena as linhas de um arquivo texto.Suas opções são:-b: Ignora espaços no início da linha;-d: Coloca as linhas em ordem alfabética e ignora a pontuação;-f: Ignora a diferença entre maiúsculas e minúsculas;-I: Ignora caracteres de controle;-m: Mescla dois ou mais arquivos em um arquivo ordenado de saída;-M: Trata as três primeiras letras das linhas como mês (ex: JAN);-n: Ordena pelos números no início das linhas;-r: Ordena em ordem inversa;-u: Se a linha for duplicada, mostra somente a primeira;-o: Envia a saída do comando para o arquivo.Ex.:$ sort arquivoUniqUso:$ uniq [Opções]… [Arquivo Entrada [Arquivo Saída]]O comando uniq remove as linhas duplicadas de um arquivo ordenado.Exemplo:uniq operadores.txt | sort -cAs opções mais comuns são:-c: Indica no início das linhas o número de ocorrências;-d: Imprime somente as linhas duplicadas;-i: Ignora a diferença entre maiúsculas e minúsculas;-u: Imprime somente as linhas únicas, que não têm duplicatas.sedUso:$ sed [Opções] {script} arquivoO comando sed é um poderoso editor de strings para filtrar ou editar sequências de texto.As opções mais comuns são:-e: Adiciona um script aos comandos a serem executados;-f arquivo: Adiciona o conteúdo de um arquivo como script a ser executado;-r: Usa expressões regulares no script.Exemplos:Para substituir expressões por outras, utilizamos o “s”, com os delimitadores “/”, de forma que a primeira ocorrência é o texto a ser procurado, e a segunda o texto que será substituído. Observe que o sed somente irá trocar a primeira ocorrência de cada linha, e é sensível a maiúsculas e minúsculas. A saída padrão do sed será o terminal.$ cat arquivoHoje fará calor de noite. A Noite é bela.$ sed s/noite/dia/ arquivoHoje fará calor de dia. A Noite é bela.EchoUso:echo [opções] [argumentos]Este comando mostra texto na saída padrão seguido por uma nova linha.-n : não adiciona uma nova linha após mostrar os argumentos.-e : habilita interpretação dos códigos de escape após barra invetida.-E : suprime explicitamente a interpretação de códigos de escape após barra invertida.    São exemplos de códigos de escape\\a : alerta (Sino); \\b : retroceder; \\c : suprime próxima saída; \\e : caractere de escape; \\f : alimentação de página (FF); \\n : nova linha (NL); \\r : retorno de carro (CR); \\t : tabulação horizontal; \\v : tabulação vertical.Exemplos;      O comando    echo teste    apenas mostra a palavra “teste” na saída padrão, enquanto o comando    echo    mostra uma linha em branco.        Este comando pode ser usado para exibir todos os nomes de arquivos de um diretório em ordem alfabética. Por exemplo,    echo /*    lista o conteúdo do diretório raiz.        O comando    echo -e /etc/* “\\n” /*    mostra o conteúdo do diretório /etc, define uma nova linha com o código de escape “\\n” e, em seguida, mostra o conteúdo diretório raiz.        Este comando pode também ser utilizado na programação shell    para escrever mensagens na saída padrão. Por exemplo,    echo ‘erro de execução’    mostra a mensagem definida entre aspas simples no terminal do usuário.        Para verificar o conteúdo da variável de ambiente PATH, basta digitar na linha de comando    echo “$PATH”        O comando também pode ser usado para add um texto a um arquivo, criar um arquivo com texto dentro ou alterar todo o arquivo por uma nova mensagem;    Sobrescrever todo arquivo pela palavra teste / ou criar um arquivo com a palavra teste:echo \"teste\" &gt; /path/arquivo    Acrescentar ao final do arquivo a palavra testeecho \"teste\" &gt;&gt; /path/arquivo          caso queira adicionar uma frase em uma linha específica de um arquivo, use o comando SED, mostrado acima. Exemplo:      sed '15s/.*/Adoro esse site/' &lt; nome do arquivo &gt;      sed '15c\\Adoro esse site' &lt; nome do arquivo &gt;      Sendo 15 a numeração da linha e o Adoro esse site o texto a ser inserido.      ps: de nada adianta colocar alguma palavra na linha 10 em um arquivo que tem 4 linhas…      Organização e velocidadeÉ legal falar que podemos também aprender algumas teclas de atalho para ter facilidade em trabalhar no terminal.Segue algumas teclas de atalhos que geralmente são padrões e podem ser bastante úteis para seu workflow. Alguns programas podem utilizar teclas diferentes e outros podem permitir a alteração para as teclas de sua escolha.Pequena lista de atalhos básicos:  Ctrl + Alt + T - abrir o terminal  Ctrl + Shift + C - copiar um texto selecionado;  Ctrl + Shift + V - colar um texto copiado;  Ctrl + C - cancelar o comando em funcionamento;  Ctrl + L - limpar o terminal, similar ao comando clear;  Ctrl + D - fazer logout da sessão atual, similar ao comando exit;  Ctrl + W - apagar uma palavra na linha atual;  Ctrl + U - apagar a linha inteira;  Ctrl + R - mostrar um comando recente;  ↑ - teclando pra cima pode retornar os últimos comandos usados pelo usuário;  !! - repetir o último comando  Tab - completar palavra, como o nome de um arquivo ou pasta, para não precisar escrever tudo  entre outros…  Com o programa Terminator, e outros parecidos, você pode abrir mais de um terminal na mesma janela de forma simples e organizada, além de poder customizar as teclas de atalho da forma que quiser.É uma das excelentes alternativas para quem busca trabalhar de forma mais efetiva e rápida com as linhas de comando.Lista de comandos geraisGuia resumido de diversos comandos. Uma pequena lista de comandos para quem quer apenas checar, conhecer e/ou revisar.Nesta parte listei diversos comandos com suas funcionalidades principais, sem aprofundamento geral de como usar.   Lista resumida de comandos para o terminal:Obs: alguns comandos podem precisar serem instalados para funcionar em algumas distribuições            man / help :  manual para algum comando;  help, -h, –help se quer ajuda sobre usar tal comando              whatis - mostra um resumo sobre comandos.              whoami - comando que mostra quem é você - usuário.              whereis - buscar e listar a localização de arquivos binários, fontes e documentação.              shutdown - desligar, reinicializar ou suspender.              logout - Finalizar sessão              reboot, shutdown -r now - Reiniciar o sistema              halt, telnit 0, init 0, shutdown -h now - Desligar o sistema                        ifconfig - Mostrar e configurar interface de rede.                          date - exibir ou modificar a data e a hora do sistema .                          cal - calendário .                          pwd - diretório atual.                          cd - navegar entre as pastas .                          file - informações de um arquivo - identifica o tipo de arquivo.                          cat - ver conteúdo de algum arquivo .                          less e more - ler conteúdo de texto com paginação, com esses você pode ‘folhear’ um arquivo de texto. Com o more apenas será possível descer pelo arquivo, já o less te permite subir/voltar se quiser. O less também te permite salvar todo o resultado canalizado de um comando usado com ele.                          mkdir - criar diretórios.                          rmdir - remover diretórios vazios.                          rm - remover arquivos (ou diretórios cheios seguido do parâmetro recursive e force &gt; rm -rf).                          mv - mover ou renomear arquivo ou diretório.                          rename - renomear arquivos ou diretórios.                          cp - copiar / duplicar arquivo.                          uptime -  mostra há quanto tempo o pc está ligado.                          touch - criação de arquivo em branco. Podemos, também, alterar a data e a hora do último acesso e/ou data de modificação de um arquivo.                          nano, vi, vim, visudo, vipw, etc  - editores de texto - criação de arquivo - visudo é o recomendado para editar o  arquivo sudores - vipw para editar os arquivos /etc/passwd e /etc/shadow.                          clear - limpa a tela do terminal (ou CTRL + L).                          exit - este comando executa o término de um processo, seja fechando o terminal ou sair do usuário que você logou via terminal, por exemplo.                          route - visualizar e manipular o IP routing table -  tabela de roteamento IP                          free - conferir o uso de memória ram (por padrão em kilobytes, já com o valor *-h mostra em mega ou em giga)* .                          apt - advanced package tool: pacote de comandos usados para instalar e buscar programas, atualizar sistema, entre outros. (obs: alguns sistemas não trabalham com apt, mas sim com outros comandos, como o comando dnf pelo fedora).                          uname - informações do sistema. ( * -m para saber a arquitetura do sistema (x86 ou x64); -r sobre kernel;  -a mostrar tudo que ele pega* ).                          find - encontrar arquivos - pesquisa em uma hierarquia de diretórios.                          strings - localizar e imprimir cadeias de texto embutidos em arquivos binários.                          mount - montar sistemas de arquivo. (unmount para desmontar &amp; *fuser para forçar a remoção de um dispositivo ocupado)*.                          sudo - usar privilégio de outro usuário para aqueles que estão em sudoers - pode ser lido como super user do.                          dpkg - instalador de pacotes.                          grep - filtro para uma saída mais específica.                          arch - informar a arquitetura do sistema / o tipo de hardware.                          at - agendar tarefa [listar as tarefas com atq; deletar tarefas com atrm].                          chgrp - alterar nome do grupo de arquivos.                          chmod - alterar as permissões de arquivos.                          chsh - alterar o shell padrão (normalmente o padrão é o bash).                          cut - filtro para selecionar partes de um arquivo e exibir o resultado.                          echo - Apresentar um texto. Mostrar texto na saída padrão seguido por uma nova linha. Pode ser usado pra criar um arquivo com texto dentro, pra add um texto em uma linha ou modificar todo o texto pelo que quiser.                          fdisk - gerenciar partições de disco.                          fg - mover processos de segundo para primeiro plano.                          finger - exibir informações do usuário.                          fsck - verificar e até reparar sistemas de arquivos.                          fuser - identificar processos que usam um determinado arquivo.                          gcc - compilar linguagem c e c++ [ gdb - um debugger para depuração de programas C e C++ ].                          getcap- informar as capacidades dos arquivos.                          gpasswd - administrar o arquivo /etc/group.                          passwd - administrar senhas de usuários                          groupmod - modificar grupo de usuários do sistema.                          head - mostrar as primeiras linhas de um arquivo de texto.                          history - mostrar os últimos comandos utilizados pelo usuário.                          hwinfo - pegar e mostrar a maior quantidade possível de informações sobre o hardware da máquina. -  info - pegar a documentação de informação sobre um comando, pode ser mais amigável que o man.                            apropos - pesquisar por determinada expressão nas páginas do manual do sistema.              xman - Navegador para as páginas on-line.              kill - enviar um sinal para um processo, normalmente para encerrar. Para ver a lista de sinais usar kill -l.              killall -  envia um determinado sinal a um conjunto de processos de mesmo nome.              ps, pstree e top - mostrar informações sobre os processos em execução. O pstree lista em modo de organização árvore.              lscpu - informações de arquitetura da CPU.              lshw - informações sobre hardware.              lsmod - listar módulos do kernel carregados na memória.              insmod - inserir um módulo no kernel Linux.              lsof - listar arquivos em uso dos processos (list open files).              lsusb - informações de dispositivos USB (Universal Serial Bus).              make - simplificar e agilizar a compilação de programas; compilando;  verificando arquivos que precisam ser compilados e criando aplicações.              mkswap - configurar swap, área de troca.              more - paginação de arquivos ou da entrada padrão.              netstat - informações sobre as conexões de rede, tabelas de roteamento e estatísticas da utilização da interface na rede.              nice - definir valor de ajuste da prioridade.              nl - exibir o conteúdo de um arquivo com linhas enumeradas.              nohup - deixar qualquer comando rodando mesmo desconectado do sistema.              oclock - relógio analógico com a hora atual do sistema.              diff - comparar dois arquivos linha a linha.              patch - atualizar o arquivo de acordo com as diferenças mostradas pelo diff.              ping - normalmente usado para testar a conectividade (usa o datagrama _Echo Request_  _(ping)_ do protocolo ICMP).              ps - mostrar informações dos processos ativos.              quota - informações sobre o sistema de cotas de disco.              renice - alterar o valor nice para calcular a prioridade de um processo normal.              RPM - gerenciador de pacotes.              setcap - setar, deletar e alterar a capacidade de um arquivo.              slabtop - exibir em tempo real informações da memória cache.              sort - mostrar saída de um arquivo texto mais organizado, como em ordem crescente por exemplo (espaços, números, letra maiúsculas [A-Z] e letras minúsculas [a-z]).              source - executar um arquivo no shell (interpretador de comandos do linux).              ssh - acessar e executar comandos em uma máquina remotamente.              stat - mostrar informações sobre um arquivo.              tac - mostrar conteúdos de arquivos de forma inversa.              tail - exibir ultimas linhas de um arquivo de texto.              tee - lê a entrada padrão e a salva em um ou mais arquivos.              tree - listar, assim como o ls, mas em formato árvore.              unset - apagar uma variável de ambiente.              users, who, w - listar/mostrar usuários logados/conectados. w também mostra o que estão executando.              vmstat - mostrar estatísticas sobre a memória virtual.              wc - contar linhas, palavras e caracteres.              wget - baixar arquivos da internet (usa os protocolos HTTP, HTTPS e FTP).              curl - “Client URL” - verificar a conectividade da URL &amp; transferência de dados              ar, tar, gzip, compress, bzip2, zip - compactar/agrupar e descompactar arquivos. (com o tar tbm pode exibir o conteúdo do arquivo e até ser usado para backups)              unzip, bunzip2 - descompactar arquivos              ln - criar links (atalhos).              which- indica o caminho completo para o comando dado.              du - indicar o espaço usado em disco pelos arquivos ou diretórios dados.              df - dar informações sobre os sistemas de arquivos disponíveis na máquina e sua ocupação em disco.              printenv SHELL - saber qual interpretador de comandos seu usuário utilizar.              locate - encontrar todas as instâncias de um arquivo.              finger -  informações do usuário.              bg - listar, e fazer continuar, trabalhos parados e em segundo plano.              change - ver, definir e modificar um limite de tempo para contas de usuário.              newgrp -  criar novo grupo para alterar o grupo padrão dos arquivos recém-criados.              grpck - checar a sintaxe correta de ‘/ etc/grupo’ e a existência de grupos.              pwck - checar a sintaxe correta de ‘/ etc/passwd’ e a existência de usuários.              chattr - definir certos atributos de um arquivo.              lsattr - exibe os atributos de um arquivo.              ecode - conversão de formatos de arquivos.              badblocks - verificar se tem blocos defeituosos do disco.              ext2, e2fsck - verificar e reparar a integridade do sistema de arquivo ext2.              ext3, e2fsck - verificar e reparar a integridade do sistema de arquivo ext3.              vfat - verificar e reparar a integridade do arquivo sistema disco fat.              msdos, dosfsck - verificar e reparar a integridade de um arquivo a partir do sistema disco DOS.              unix2dos - conversão de um formato de arquivo de texto do MSDOS para UNIX, e dos2unix de UNIX para MSDOS.              dump - ferramenta de backup de bloco de disco. - Tal qual o tar, mas mais eficiente e seguro.              rsync - sincronizar diretórios.              restore - restaurar um save.              xrandr - ver e fazer configuraçes de monitor(es)      ….entre outros…      Não conseguirei postar todos os comandos que existem, mas tentei colocar uma boa parte deles para que fique um material bem completo.Mas pelo menos agora, das coisas do dia-a-dia, podemos fazer praticamente tudo e mais um pouco.Manterei a lista atualizada em caso de algum equívoco e falta de qualquer comando importante e/ou básico para ser apresentado.Acredito que o material já esteja de bom tamanho e que tenha ficado um excelente compilado para quem quer aprender sobre. Certamente, por meio deste material, compensa começar a estudar e a se aperfeiçoar, principalmente se precisar lembrar algo que tenha esquecido em momento de aperto.Claro, não parem por aqui. A internet está recheada de conteúdos excelentes para aprender cada vez mais!Se aventure neste mundo!  Divirta-se!Se puder ajudar compartilhando o material com amigos que buscam aprender, seria de grande ajuda. Lembrando que meu trabalho aqui é apenas como um divulgador e estudante, sem fins lucrativos.​    Obrigado para todos que curtiram e compartilharam o material, muito obrigado mesmo.​                                     Feito de coração de estudante para estudante."
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-10 13:34:00 -0300",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 09:55:00 -0300",
    





    
    "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to cr...",
    "content": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme:  Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing.  GitHub Fork - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterSign in to GitHub and browse to Chirpy Starter, click the button Use this template &gt; Create a new repository, and name the new repository USERNAME.github.io, where USERNAME represents your GitHub username.Option 2. GitHub ForkSign in to GitHub to fork Chirpy, and then rename it to USERNAME.github.io (USERNAME means your username).Next, clone your site to local machine. In order to build JavaScript files later, we need to install Node.js, and then run the tool:$ bash tools/init  If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will:  Check out the code to the latest tag (to ensure the stability of your site: as the code for the default branch is under development).  Remove non-essential sample files and take care of GitHub-related files.  Build JavaScript files and export to assets/js/dist/, then make them tracked by Git.  Automatically create a new commit to save the changes above.Installing DependenciesBefore running local server for the first time, go to the root directory of your site and run:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options:  url  avatar  timezone  langSocial Contact OptionsSocial contact options are displayed at the bottom of the sidebar. You can turn on/off the specified contacts in file _data/contact.yml.Customizing StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/jekyll-theme-chirpy.scss to the same path on your Jekyll site, and then add the custom style at the end of it.Starting with version 6.2.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, copy the main sass file _sass/main.scss into the _sass directory in your site’s source, then create a new file _sass/variables-hook.scss and assign new value.Customing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined by file _data/origin/cors.yml, and you can replace some of them according to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sAfter a few seconds, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using GitHub ActionsThere are a few things to get ready for.  If you’re on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, go to the root of your site and update the platform list of the lock-file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service.      Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar. Then, in the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  At this point, you can go to the URL indicated by GitHub to access your site.Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 03:10:00 -0300",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Post DescriptionBy default, the first words of the post are used to display on the home page for a list of posts, in the Further Reading section, and in the XML of the RSS feed. If you don’t want to display the auto-generated description for the post, you can customize it using the description field in the Front Matter as follows:---description: Short summary of the post.---Additionally, the description text will also be displayed under the post title on the post’s page.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---After enabling the mathematical feature, you can add math equations with the following syntax:  Block math should be added with $$ math $$ with mandatory blank lines before and after $$          Inserting equation numbering should be added with $$\\begin{equation} math \\end{equation}$$      Referencing equation numbering should be done with \\label{eq:label_name} in the equation block and \\eqref{eq:label_name} inline with text (see example below)        Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$  Inline math (in lists) should be added with \\$$ math $$&lt;!-- Block math, keep all blank lines --&gt;$$LaTeX_math_expression$$&lt;!-- Equation numbering, keep all blank lines  --&gt;$$\\begin{equation}  LaTeX_math_expression  \\label{eq:label_name}\\end{equation}$$Can be referenced as \\eqref{eq:label_name}.&lt;!-- Inline math in lines, NO blank lines --&gt;\"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"&lt;!-- Inline math in lists, escape the first `$` --&gt;1. \\$$ LaTeX_math_expression $$2. \\$$ LaTeX_math_expression $$3. \\$$ LaTeX_math_expression $$MermaidMermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image, then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won’t be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\" /&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\" /&gt;Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image’s attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the img_path can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post Text and Typography.For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.VideosVideo Sharing PlatformYou can embed a video with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211              https://www.bilibili.com/video/BV1Q44y1B7Wf      bilibili      BV1Q44y1B7Wf      Video FileIf you want to embed a video file directly, use the following syntax:{% include embed/video.html src='{URL}' %}Where URL is an URL to a video file e.g. /assets/img/sample/video.mp4.You can also specify additional attributes for the embedded video file. Here is a full list of attributes allowed.  poster='/path/to/poster.png' - poster image for a video that is shown while video is downloading  title='Text' - title for a video that appears below the video and looks same as for images  autoplay=true - video automatically begins to play back as soon as it can  loop=true - automatically seek back to the start upon reaching the end of the video  muted=true - audio will be initially silenced  types - specify the extensions of additional video formats separated by |. Ensure these files exist in the same directory as your primary video file.Consider an example utilizing all of the above:{%  include embed/video.html  src='/path/to/video/video.mp4'  types='ogg|mov'  poster='poster.png'  title='Demo video'  autoplay=true  loop=true  muted=true%}  It’s not recommended to host video files in assets folder as they cannot be cached by PWA and may cause issues.Instead, use CDN to host video files. Alternatively, use a separate folder that is excluded from PWA (see pwa.deny_paths setting in _config.yml).AudiosAudio FileIf you want to embed an audio file directly, use the following syntax:{% include embed/audio.html src='{URL}' %}Where URL is an URL to an audio file e.g. /assets/img/sample/audio.mp3.You can also specify additional attributes for the embedded audio file. Here is a full list of attributes allowed.  title='Text' - title for an audio that appears below the audio and looks same as for images  types - specify the extensions of additional audio formats separated by |. Ensure these files exist in the same directory as your primary audio file.Consider an example utilizing all of the above:{%  include embed/audio.html  src='/path/to/audio/audio.mp3'  types='ogg|wav|aac'  title='Demo audio'%}  It’s not recommended to host audio files in assets folder as they cannot be cached by PWA and may cause issues.Instead, use CDN to host audio files. Alternatively, use a separate folder that is excluded from PWA (see pwa.deny_paths setting in _config.yml).Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 00:33:00 -0300",
    





    
    "snippet": "HeadingsH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risu...",
    "content": "HeadingsH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\begin{equation}  \\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}  \\label{eq:series}\\end{equation}\\]We can reference the equation as \\eqref{eq:series}.When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  }
  
]

